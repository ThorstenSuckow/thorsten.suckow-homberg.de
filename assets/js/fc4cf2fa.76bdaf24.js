"use strict";(self.webpackChunkthorsten_suckow_homberg_de=self.webpackChunkthorsten_suckow_homberg_de||[]).push([[5150],{3271:(e,n,t)=>{t.d(n,{R5:()=>s,I8:()=>s,Dn:()=>i,lA:()=>r,E4:()=>s,$1:()=>r});t(6540);var a=t(4848);function s(e){let{name:n,pp:t,add:s}=e;const i=`#bibref-${n.toLowerCase()}`;return(0,a.jsxs)("a",{href:i,children:["[",(0,a.jsxs)("span",{className:"bibRef",children:["\ud83d\udcd6",n]}),s?`, ${s} `:"",t?`, ${t.includes("-")?"pp":"p"}. ${t}`:"","]"]})}function i(e){let{idx:n}=e;return(0,a.jsx)("a",{href:`#fig_${n}`,children:(0,a.jsxs)("span",{className:"bibRef",children:["Figure ",n]})})}function r(e){let{name:n,file:t,url:s}=e;t=t||(s||""),Object.entries({sd:"softwaredesign",sa:"softwarearchitecture",cs:"computerscience"}).some((e=>{let[n,a]=e;if(t.startsWith(`${n}.`))return t=t.replace(`${n}.`,`${a}.`),!0}));const i=`/docs/wiki/${t}`;return(0,a.jsx)("a",{href:i,className:"glosRef",children:n})}},5142:(e,n,t)=>{t.d(n,{o:()=>s});t(6540);var a=t(4848);function s(){return(0,a.jsx)("div",{style:{width:"100%",textAlign:"right"},children:(0,a.jsx)("a",{style:{textDecoration:"underline"},onClick:()=>history.go(-1),href:"#",children:"Back"})})}},7807:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>d,metadata:()=>a,toc:()=>p});const a=JSON.parse('{"id":"wiki/softwaredesign.tabledatagateway","title":"Table Data Gateway","description":"A Table Data Gateway provides an interface to the table of a database.","source":"@site/docs/wiki/softwaredesign.tabledatagateway.mdx","sourceDirName":"wiki","slug":"/wiki/softwaredesign.tabledatagateway","permalink":"/docs/wiki/softwaredesign.tabledatagateway","draft":false,"unlisted":false,"editUrl":"https://github.com/thorstensuckow/thorsten.suckow-homberg.de/tree/main/docs/wiki/softwaredesign.tabledatagateway.mdx","tags":[],"version":"current","lastUpdatedBy":"Thorsten Suckow-Homberg","lastUpdatedAt":1748530961000,"frontMatter":{"title":"Table Data Gateway"},"sidebar":"wiki","previous":{"title":"Symptoms of Poor Design","permalink":"/docs/wiki/softwaredesign.symptomsofpoordesign"},"next":{"title":"Ubiquitous Language","permalink":"/docs/wiki/ddd.ubiquitouslanguage"}}');var s=t(4848),i=t(8453),r=t(3271),o=t(5142);const d={title:"Table Data Gateway"},l="Table Data Gateway (Software Design)",c={},p=[{value:"Example",id:"example",level:2}];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"table-data-gateway-software-design",children:"Table Data Gateway (Software Design)"})}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.strong,{children:"Table Data Gateway"})," provides an interface to the table of a database."]}),"\n",(0,s.jsxs)(n.p,{children:["The interface maps semantics of native SQL-commands to its interface-methods, such as ",(0,s.jsx)(n.code,{children:"INSERT"}),", ",(0,s.jsx)(n.code,{children:"UPDATE"}),", ",(0,s.jsx)(n.code,{children:"DELETE"})," and ",(0,s.jsx)(n.code,{children:"SELECT"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Additional methods might be added to the Gateway, e.g. for querying data based on more complex filter criteria."}),"\n",(0,s.jsxs)(n.p,{children:["For reconstituting more complex ",(0,s.jsx)(r.lA,{name:"Domain Models",file:"ddd.domainmodel"}),", such as ",(0,s.jsx)(r.lA,{name:"Aggregates",file:"ddd.aggregate"}),", ",(0,s.jsx)(n.strong,{children:"Data Mappers"})," can be used."]}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsxs)(n.p,{children:["The following class provides an interface for a ",(0,s.jsx)(n.strong,{children:"Table Data Gateway"})," for an ",(0,s.jsx)(n.code,{children:"Employee"}),"-table:"]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"(SQL-)code intentionally simplified for demonstration purposes."})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",metastring:'title="EmployeeTableDataGateway.php"',children:"\nclass EmployeeTableDataGateway {\n\n\n    public function insert(string $empId, string $name, string $address): string\n    {\n        $sql = \"INSERT INTO employee (emp_id, name, address) VALUES ('$empId', '$name', '$address')\";\n\n        return $this->dbConn->execute($sql);\n    }\n\n\n    public function update(string $empId, string $name, string $address): bool\n    {\n        $sql = \"UPDATE employee SET emp_id='$empId', name='$name', address='$address'\";\n\n        return $this->dbConn->execute($sql);\n    }\n\n\n    public function find(string $empId): array\n    {\n        $sql = \"SELECT FROM employee WHERE emp_id='$empId'\";\n\n        return $this->executeSelect($sql);\n    }\n\n\n    public function findByCompany(string $companyId): array\n    {\n        $sql = \"SELECT FROM employee WHERE company_id='$companyId'\";\n\n        return $this->executeSelect($sql);\n    }\n}\n\n"})}),"\n",(0,s.jsx)(o.o,{})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var a=t(6540);const s={},i=a.createContext(s);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);