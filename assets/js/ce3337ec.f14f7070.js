"use strict";(self.webpackChunkthorsten_suckow_homberg_de=self.webpackChunkthorsten_suckow_homberg_de||[]).push([[4955],{3271:(e,s,n)=>{n.d(s,{R5:()=>i,I8:()=>i,Dn:()=>c,lA:()=>a,E4:()=>i,$1:()=>a});n(6540);var t=n(4848);function i(e){let{name:s,pp:n,add:i}=e;const c=`#bibref-${s.toLowerCase()}`;return(0,t.jsxs)("a",{href:c,children:["[",(0,t.jsxs)("span",{className:"bibRef",children:["\ud83d\udcd6",s]}),i?`, ${i} `:"",n?`, ${n.includes("-")?"pp":"p"}. ${n}`:"","]"]})}function c(e){let{idx:s}=e;return(0,t.jsx)("a",{href:`#fig_${s}`,children:(0,t.jsxs)("span",{className:"bibRef",children:["Figure ",s]})})}function a(e){let{name:s,file:n,url:i}=e;n=n||(i||""),Object.entries({sd:"softwaredesign",sa:"softwarearchitecture",cs:"computerscience"}).some((e=>{let[s,t]=e;if(n.startsWith(`${s}.`))return n=n.replace(`${s}.`,`${t}.`),!0}));const c=`/docs/wiki/${n}`;return(0,t.jsx)("a",{href:c,className:"glosRef",children:s})}},5142:(e,s,n)=>{n.d(s,{o:()=>i});n(6540);var t=n(4848);function i(){return(0,t.jsx)("div",{style:{width:"100%",textAlign:"right"},children:(0,t.jsx)("a",{style:{textDecoration:"underline"},onClick:()=>history.go(-1),href:"#",children:"Back"})})}},7178:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"wiki/computerscience.metaclass","title":"Metaclass","description":"A Metaclass in Object-oriented programming is a class whose instances contain class-definitions. Metaclasses can","source":"@site/docs/wiki/computerscience.metaclass.mdx","sourceDirName":"wiki","slug":"/wiki/computerscience.metaclass","permalink":"/docs/wiki/computerscience.metaclass","draft":false,"unlisted":false,"editUrl":"https://github.com/thorstensuckow/thorsten.suckow-homberg.de/tree/main/docs/wiki/computerscience.metaclass.mdx","tags":[],"version":"current","lastUpdatedBy":"Thorsten Suckow-Homberg","lastUpdatedAt":1756846844000,"frontMatter":{"title":"Metaclass"},"sidebar":"wiki","previous":{"title":"Liskov Substitution Principle","permalink":"/docs/wiki/softwaredesign.liskovsubstitutionprinciple"},"next":{"title":"Method Signature","permalink":"/docs/wiki/computerscience.methodsignature"}}');var i=n(4848),c=n(8453),a=n(3271),l=n(5142);const r={title:"Metaclass"},o="Metaclass (Computer Science)",d={},h=[{value:"Python Example",id:"python-example",level:2},{value:"Employee Example",id:"employee-example",level:4}];function p(e){const s={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"metaclass-computer-science",children:"Metaclass (Computer Science)"})}),"\n",(0,i.jsxs)(s.p,{children:["A ",(0,i.jsx)(s.strong,{children:"Metaclass"})," in Object-oriented programming is a class whose instances contain class-definitions. ",(0,i.jsx)(s.strong,{children:"Metaclasses"})," can\nbe used to define behavior and attributes of classes."]}),"\n",(0,i.jsx)(s.h2,{id:"python-example",children:"Python Example"}),"\n",(0,i.jsxs)(s.p,{children:["In ",(0,i.jsx)(s.strong,{children:"Python"}),", classes are objects that can be used to construct instances."]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsxs)(s.em,{children:['"Classes provide a means of bundling data and functionality together. Creating a new class creates a new ',(0,i.jsx)(s.strong,{children:"type"})," of object, allowing new ",(0,i.jsx)(s.strong,{children:"instances"}),' of that type to be made. Each class instance can have attributes attached to it for maintaining its state. Class instances can also have methods (defined by its class) for modifying its state."']})," ",(0,i.jsx)(s.a,{href:"https://docs.python.org/3/tutorial/classes.html",children:"https://docs.python.org/3/tutorial/classes.html"})]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"employee-example",children:"Employee Example"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"class Employee: pass\n"})}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"metaclass"})," of ",(0,i.jsx)(s.code,{children:"Employee"})," is ",(0,i.jsx)(s.code,{children:"type"}),":"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"print(type(Employee)); # <class 'type'>\n"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"Employee"})," is now a ",(0,i.jsx)(a.lA,{name:"First Class Citizen",file:"cs.firstclasscitizen"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["it can be assigned to other variables: ",(0,i.jsx)(s.code,{children:"EmployeeFactory = Employee"})]}),"\n",(0,i.jsxs)(s.li,{children:["it be passed to other methods as an argument: ",(0,i.jsx)(s.code,{children:"print(Employee)"})]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Additionally, properties can be added during runtime: ",(0,i.jsx)(s.code,{children:'Employee.prop = "value"'}),";"]}),"\n",(0,i.jsxs)(s.p,{children:["Calling ",(0,i.jsx)(s.code,{children:"Employee"})," as a method will create an instance of ",(0,i.jsx)(s.code,{children:"Employee"}),":"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"emp = Employee();\nprint(type(emp)); # <class '__main__.Employee'>\n"})}),"\n",(0,i.jsx)(s.admonition,{title:"In a nutshell",type:"tip",children:(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"type"})," is the ",(0,i.jsx)(s.strong,{children:"Metaclass"})," of ",(0,i.jsx)(s.code,{children:"Employee"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["thus, ",(0,i.jsx)(s.code,{children:"Employee"})," is an instance of ",(0,i.jsx)(s.code,{children:"type"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["calling ",(0,i.jsx)(s.code,{children:"Employee()"})," creates and returns an instance of ",(0,i.jsx)(s.code,{children:"Employee"}),"."]}),"\n"]})}),"\n",(0,i.jsx)(l.o,{}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.p,{children:"See also"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://dl.acm.org/doi/pdf/10.1145/286936.286949",children:"Bouraqadi-Saidani, Ledoux, Rivard: Safe Metaclass Programming"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://www.researchgate.net/publication/229023549_Programming_with_ObjVLisp_metaclasses_in_Smalltalk-80",children:"Briot, Cointe: Programming with ObjVLisp metaclasses in Smalltalk-80"})}),"\n"]})]})}function m(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>l});var t=n(6540);const i={},c=t.createContext(i);function a(e){const s=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(c.Provider,{value:s},e.children)}}}]);