"use strict";(self.webpackChunkthorsten_suckow_homberg_de=self.webpackChunkthorsten_suckow_homberg_de||[]).push([[4145],{3491:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"toolbox/refactoring.separatequeryfrommodifier","title":"Separate Query From Modifier","description":"Separate Query From Modifier is a refactoring that helps with creating side effect free functions.","source":"@site/docs/toolbox/refactoring.separatequeryfrommodifier.mdx","sourceDirName":"toolbox","slug":"/toolbox/refactoring.separatequeryfrommodifier","permalink":"/docs/toolbox/refactoring.separatequeryfrommodifier","draft":false,"unlisted":false,"editUrl":"https://github.com/thorstensuckow/thorsten.suckow-homberg.de/tree/main/docs/toolbox/refactoring.separatequeryfrommodifier.mdx","tags":[],"version":"current","lastUpdatedBy":"Thorsten Suckow-Homberg","lastUpdatedAt":1746642828000,"frontMatter":{"title":"Separate Query From Modifier"},"sidebar":"toolbox","previous":{"title":"Repository","permalink":"/docs/toolbox/softwaredesign.repository"},"next":{"title":"Separation of Concerns","permalink":"/docs/toolbox/softwaredesign.separationofconcerns"}}');var r=t(4848),o=t(8453),a=t(4843);const i={title:"Separate Query From Modifier"},c="Separate Query From Modifier (Refactoring)",l={},d=[];function h(e){const n={admonition:"admonition",annotation:"annotation",blockquote:"blockquote",code:"code",em:"em",h1:"h1",header:"header",hr:"hr",li:"li",math:"math",mdxAdmonitionTitle:"mdxAdmonitionTitle",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"separate-query-from-modifier-refactoring",children:"Separate Query From Modifier (Refactoring)"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Separate Query From Modifier"})," is a refactoring that helps with creating side effect free functions."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Separate Query From Modifier"}),"-refactoring is used to separate a modifier (i.e. some ",(0,r.jsx)(n.em,{children:"setter"}),")\nfrom a query (i.e. some ",(0,r.jsx)(n.em,{children:"getter"}),"). Any ",(0,r.jsx)(n.em,{children:"getter"})," that also calls a ",(0,r.jsx)(n.em,{children:"setter"})," is usually a good candidate for the violation of the ",(0,r.jsx)(n.strong,{children:"SRP"}),":"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:'"A good rule to follow is to say that any method that returns a value should not have observable side effects"'}),". ",(0,r.jsx)(a.R5,{name:"ref",pp:"279"})]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{title:"Be wary of the context",type:"caution",children:(0,r.jsxs)(n.p,{children:["If you're using a coarse-grained ",(0,r.jsx)(a.lA,{name:"Facade",file:"sd.facade"})," that provides access to fine-grained operations,\nthis Facade is not necessarily side effect free. However, methods with the clear intent to\nreturn ",(0,r.jsx)(n.strong,{children:"a value"}),' ("intent" as in: documented in its method name ',(0,r.jsx)(a.R5,{name:"CC",pp:"39"}),") should be side effect free."]})}),"\n",(0,r.jsxs)(n.p,{children:["In the following example, ",(0,r.jsx)(n.strong,{children:"Accounting"})," queries an ",(0,r.jsx)(n.strong,{children:"Employee"}),"'s salary. It also checks for an outstanding bonus\nthe employee should receive and updates the salary with it. The salary is then returned."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"\n    class Accounting\n    {\n        public function salary(int $empId): Money\n        {\n            $bonus = $this->getOutstandingBonus($empdId)\n            if ($bonus !== null) {\n                $this->updateSalaray($empId, $bonus);\n            }\n\n            $salary = $this->querySalary($empId);\n\n            return $salary;\n        }\n    }\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The method modifies the value before it is returned (or does it?):\n",(0,r.jsx)(n.code,{children:"updateSalary()"})," is called if ",(0,r.jsx)(n.code,{children:"getOutstandingBonus()"})," indicates that if there is a need to adjust the ",(0,r.jsx)(n.code,{children:"salary"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The implications of ",(0,r.jsx)(n.code,{children:"updateSalary()"})," are unclear to ",(0,r.jsx)(n.code,{children:"salary()"}),", right so for the client who is not aware that a call to\n",(0,r.jsx)(n.code,{children:"salary()"})," also updates the existing ",(0,r.jsx)(n.code,{children:"salary"})," with an outstanding bonus."]}),"\n",(0,r.jsx)(n.p,{children:'What if the client expects the method to be more "pure"?'}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsxs)(n.mdxAdmonitionTitle,{children:['"More Pure" ',(0,r.jsxs)(n.span,{className:"katex",children:[(0,r.jsx)(n.span,{className:"katex-mathml",children:(0,r.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(n.semantics,{children:[(0,r.jsxs)(n.mrow,{children:[(0,r.jsx)(n.mo,{stretchy:"false",children:"!"}),(0,r.jsx)(n.mo,{children:"="})]}),(0,r.jsx)(n.annotation,{encoding:"application/x-tex",children:"!="})]})})}),(0,r.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(n.span,{className:"base",children:[(0,r.jsx)(n.span,{className:"strut",style:{height:"0.6944em"}}),(0,r.jsx)(n.span,{className:"mclose",children:"!"}),(0,r.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.jsx)(n.span,{className:"mrel",children:"="})]})})]}),' "Pure Function"']}),(0,r.jsxs)(n.p,{children:['The client may expect the method to be "pure" in a colloquial sense: For as long as the ',(0,r.jsx)(n.strong,{children:"Employee"})," does not get a raise, this means for every ",(0,r.jsx)(n.code,{children:"$empId"}),"\nalways the same ",(0,r.jsx)(n.code,{children:"salary"})," is returned.\nOf course, the method will never conform to the definition of a ",(0,r.jsx)(a.lA,{name:"Pure Function",file:"computerscience.purefunction"}),"\ngiven its context."]})]}),"\n",(0,r.jsx)(n.p,{children:"The method is a blackbox for the client, and given its intent documented with the method name (returning the salary)\none would not expect side effects."}),"\n",(0,r.jsxs)(n.p,{children:["It would be better to refactor this method so that ",(0,r.jsx)(n.code,{children:"salary()"})," simply does what any client would expect it to do: return\nthe ",(0,r.jsx)(n.code,{children:"salary"})," for the ",(0,r.jsx)(n.code,{children:"$empId"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"\n    class Accounting\n    {\n        public function salary(int $empId): Money\n        {\n            $salary = $this->querySalary($empId);\n            return $salary;\n        }\n    }\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If the client needs to adjust outstanding bonuses, another method can be used for adding the bonus to the ",(0,r.jsx)(n.code,{children:"salary"}),". By\nimplementing a method with a clear intent, multiple fine-grained actions are processed from a coarse-grained interface:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"    class Accounting\n    {\n        public function paySalaryAndUpdateBonus(int $empId): Money\n        {\n            $salary = $this->getSalary($empId);\n            $bonus = $this->getOutstandingBonus($empdId)\n            if ($bonus !== null) {\n                $this->removeBonus($empId, $bonus);\n                $salary = $salary->add($bonus);\n            }\n\n            $this->updatePayments($empdId, $salary);\n\n            return $salary;\n        }\n    }\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"see also"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(a.lA,{name:"Facade (Software Design)",file:"sd.facade"}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},4843:(e,n,t)=>{t.d(n,{Dn:()=>o,R5:()=>r,lA:()=>a});t(6540);var s=t(4848);function r(e){let{name:n,pp:t}=e;const r=`/docs/bibliography#${n.toLowerCase()}`;return(0,s.jsxs)("a",{href:r,children:["[",(0,s.jsxs)("span",{className:"bibRef",children:["\ud83d\udcd6",n]}),t?`, ${t.includes("-")?"pp":"p"}. ${t}`:"","]"]})}function o(e){let{idx:n}=e;return(0,s.jsx)("a",{href:`#fig_${n}`,children:(0,s.jsxs)("span",{className:"bibRef",children:["Figure ",n]})})}function a(e){let{name:n,file:t}=e;Object.entries({sd:"softwaredesign",sa:"softwarearchitecture",cs:"computerscience"}).some((e=>{let[n,s]=e;if(t.startsWith(`${n}.`))return t=t.replace(`${n}.`,`${s}.`),!0}));const r=`/docs/toolbox/${t}`;return(0,s.jsx)("a",{href:r,className:"glosRef",children:n})}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var s=t(6540);const r={},o=s.createContext(r);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);