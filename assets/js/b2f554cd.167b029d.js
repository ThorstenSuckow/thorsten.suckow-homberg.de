"use strict";(self.webpackChunkthorsten_suckow_homberg_de=self.webpackChunkthorsten_suckow_homberg_de||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"loesungshinweise-zu-test1-fh-trier","metadata":{"permalink":"/blog/loesungshinweise-zu-test1-fh-trier","editUrl":"https://github.com/thorstensuckow/thorsten.suckow-homberg.de/tree/main/blog/2023-10-31-loesungshinweise-zu-test1/index.md","source":"@site/blog/2023-10-31-loesungshinweise-zu-test1/index.md","title":"[DE] L\xf6sungshinweise zu Test 1 Modul Prog","description":"F\xfcr das Modul prog im Wintersemester 2023/2024 des Fernstudiengangs Informatik (M.C.Sc.) der","date":"2023-10-31T00:00:00.000Z","formattedDate":"October 31, 2023","tags":[{"label":"study","permalink":"/blog/tags/study"},{"label":"java","permalink":"/blog/tags/java"},{"label":"test","permalink":"/blog/tags/test"}],"readingTime":0.235,"hasTruncateMarker":false,"authors":[{"name":"Thorsten Suckow-Homberg","url":"https://thorsten.suckow-homberg.de","imageURL":"https://avatars.githubusercontent.com/u/823135","key":"thorstensuckow"}],"frontMatter":{"slug":"loesungshinweise-zu-test1-fh-trier","title":"[DE] L\xf6sungshinweise zu Test 1 Modul Prog","authors":["thorstensuckow"],"tags":["study","java","test"],"enableComments":true},"nextItem":{"title":"Perceptron Function Plotting with Python","permalink":"/blog/2023/07/11/perceptron-function-plotting-in-python"}},"content":"F\xfcr das Modul **prog**[^1] im Wintersemester 2023/2024 des Fernstudiengangs Informatik (M.C.Sc.) der \\n[Hochschule Trier](https://www.hochschule-trier.de/) habe ich f\xfcr **Test 1 - Klassenbasierte Programmierung** \\nL\xf6sungshinweise sowie Anmerkungen und Erg\xe4nzungen zusammengefasst. Diese k\xf6nnen als PDF \\n[hier heruntergeladen werden](./loesungshinweise-test1-prog-ws-23-24-fh-trier.pdf).  \\n\\n[^1]: Modulbegleitende Diskussions- und Lerngruppen sind auch auf unserem [Discord-Server](https://discord.gg/NXFKpXmnU) zu finden."},{"id":"/2023/07/11/perceptron-function-plotting-in-python","metadata":{"permalink":"/blog/2023/07/11/perceptron-function-plotting-in-python","editUrl":"https://github.com/thorstensuckow/thorsten.suckow-homberg.de/tree/main/blog/2023-07-11-perceptron-function-plotting-in-python/index.md","source":"@site/blog/2023-07-11-perceptron-function-plotting-in-python/index.md","title":"Perceptron Function Plotting with Python","description":"I have updated my Perceptron-implementation with","date":"2023-07-11T00:00:00.000Z","formattedDate":"July 11, 2023","tags":[{"label":"machine learning","permalink":"/blog/tags/machine-learning"},{"label":"ai","permalink":"/blog/tags/ai"},{"label":"perceptron","permalink":"/blog/tags/perceptron"},{"label":"neural network","permalink":"/blog/tags/neural-network"}],"readingTime":2.835,"hasTruncateMarker":false,"authors":[{"name":"Thorsten Suckow-Homberg","url":"https://thorsten.suckow-homberg.de","imageURL":"https://avatars.githubusercontent.com/u/823135","key":"thorstensuckow"}],"frontMatter":{"title":"Perceptron Function Plotting with Python","authors":["thorstensuckow"],"tags":["machine learning","ai","perceptron","neural network"],"enableComments":true},"prevItem":{"title":"[DE] L\xf6sungshinweise zu Test 1 Modul Prog","permalink":"/blog/loesungshinweise-zu-test1-fh-trier"},"nextItem":{"title":"[DE] \\"Beweisen lernen\\" - Errata","permalink":"/blog/2023/05/01/errata-beweisen-lernen"}},"content":"import {GlosRef, BibRef} from \\"../../src/components/References\\";\\nimport {BackButton} from \\"../../src/components/BackButton.js\\";\\n\\n\\nI have updated my **[Perceptron](https://en.wikipedia.org/wiki/perceptron)**-implementation with \\na plotting function that allows for visualizing the adjustments of the Perceptron\'s weight-vector through the epochs.\\n\\nThe source-code can be found at https://github.com/ThorstenSuckow/pylabs.\\n\\n## Usage\\n\\nCreate input data and the associated output values. As an example, the following represents the logical **AND**-function:\\n\\n```python\\nimport numpy as np\\nfrom Perceptron import Perceptron\\n\\n# input\\nX = np.array([\\n    [0, 0], [0, 1], [1, 0], [1, 1]\\n])\\n\\n# output\\ny = np.array([0, 0, 0, 1])\\n```\\n\\nIn the next step, the `Perceptron` is created.\\n\\n```python \\np = Perceptron(50, 0.3)\\n```\\n\\nOnce a `Perceptron`-instance is available, you can pass the input- and output-values to `learn()`:\\n\\n```python \\np.learn(X, y)\\n```\\n\\nand test data with\\n\\n```python \\nresult = p.test([0, 0])\\n```\\n\\n`result` holds the computed weight vector if the training data could be separated within the `epochs`. If that failed,\\n`None` is returned.\\n\\nNote: The `bias` is available with `p.bias`\\n\\nA log is available for all steps processed by `learn()`:\\n\\n```python\\nfor step in p.log:\\n    print(step)\\n```\\n\\nYou can pass the log to the `PerceptronPlotter` which will recreate the computation visually.\\n\\n\\n## Examples \\n\\n### `and`\\n\\n\\nThe `and`-function with a Perceptron.\\n\\n| $A$ | $B$ | $A \\\\land B$ |\\n|-----|-----|-------------|\\n| 1   | 1   | 1           |\\n| 1   | 0   | 0           |\\n| 0   | 1   | 0           |\\n| 0   | 0   | 0           |\\n\\n\\n```python\\nX = np.array([\\n    [0, 0], [0, 1], [1, 0], [1, 1]\\n])\\n\\ntitle= \\"\\\\\\"AND\\\\\\"\\"\\ny = np.array([0, 0, 0, 1])\\n\\np = Perceptron(50)\\np.learn(X, y)\\n\\nplotter = PerceptronPlotter(p.log, X, y, title)\\nanim = plotter.animate(500)\\n```\\n\\n![](./img/and_perceptron.gif)\\n\\n### `or`\\n\\nThe `or`-function with a Perceptron.\\n\\n| $A$ | $B$ | $A \\\\lor B$ |\\n|-----|-----|------------|\\n| 1   | 1   | 1          |\\n| 1   | 0   | 1          |\\n| 0   | 1   | 1          |\\n| 0   | 0   | 0          |\\n\\n```python\\nX = np.array([\\n    [0, 0], [0, 1], [1, 0], [1, 1]\\n])\\n\\ntitle= \\"\\\\\\"OR\\\\\\"\\"\\ny = np.array([0, 1, 1, 1])\\n\\np = Perceptron(50)\\np.learn(X, y)\\n\\nplotter = PerceptronPlotter(p.log, X, y, title)\\nanim = plotter.animate(500)\\n```\\n\\n![](./img/or_perceptron.gif)\\n\\n### `xor`\\n\\nThe `xor`-function with a Perceptron.\\n\\n| $A$ | $B$ | $A \\\\oplus B$ |\\n|-----|-----|--------------|\\n| 1   | 1   | 0            |\\n| 1   | 0   | 1            |\\n| 0   | 1   | 1            |\\n| 0   | 0   | 0            |\\n\\n\\n```python\\nX = np.array([\\n    [0, 0], [0, 1], [1, 0], [1, 1]\\n])\\n\\ntitle= \\"\\\\\\"OR\\\\\\"\\"\\ny = np.array([0, 1, 1, 0])\\n\\np = Perceptron(50)\\np.learn(X, y)\\n\\nplotter = PerceptronPlotter(p.log, X, y, title)\\nanim = plotter.animate(500)\\n```\\n\\nWith the Perceptron as a linear discriminant function, the algorithm can not properly create a separator for `XOR` <BibRef name=\\"MIN69\\" />.\\nThe Plotter shows the `Epoch`-label marked as red, which tells that the algorithm was not able to find a separator in 50 epochs.\\n\\n\\n![](./img/xor_perceptron.gif)\\n\\n### Cluster Example\\n\\nThe following uses isotropic Gaussian blobs generated by [`sklearn.datasets.make_blobs`](https://scikit-learn.org/stable/datasets/sample_generators.html#sample-generators).\\nThe `animate`-method is called with an `interval` of `100` to speed up epoch-runs. The interplay of a larger set of data and the re-adjusting of the separator if accuracy does not reach `1` for a full epoch can be observed nicely.\\n\\n```python\\ntitle = \\"Clusters\\"\\nX, y = make_blobs(n_samples=50, n_features=2, centers=2, cluster_std=2.5)\\n\\n\\np = Perceptron(50)\\np.learn(X, y)\\n\\nplotter = PerceptronPlotter(p.log, X, y, title)\\n\\nanim = plotter.animate(100)\\n```\\n\\n![](./img/cluster_perceptron.gif)\\n\\n\\n\\n---------------\\nResources\\n\\n- https://github.com/ThorstenSuckow/pylabs"},{"id":"/2023/05/01/errata-beweisen-lernen","metadata":{"permalink":"/blog/2023/05/01/errata-beweisen-lernen","editUrl":"https://github.com/thorstensuckow/thorsten.suckow-homberg.de/tree/main/blog/2023-05-01-errata-beweisen-lernen/index.md","source":"@site/blog/2023-05-01-errata-beweisen-lernen/index.md","title":"[DE] \\"Beweisen lernen\\" - Errata","description":"Errata f\xfcr Beweisen lernen (Springer Verlag 2020) von [Junk","date":"2023-05-01T00:00:00.000Z","formattedDate":"May 1, 2023","tags":[{"label":"mathematics","permalink":"/blog/tags/mathematics"}],"readingTime":8.335,"hasTruncateMarker":false,"authors":[{"name":"Thorsten Suckow-Homberg","url":"https://thorsten.suckow-homberg.de","imageURL":"https://avatars.githubusercontent.com/u/823135","key":"thorstensuckow"}],"frontMatter":{"title":"[DE] \\"Beweisen lernen\\" - Errata","authors":["thorstensuckow"],"tags":["mathematics"],"enableComments":true},"prevItem":{"title":"Perceptron Function Plotting with Python","permalink":"/blog/2023/07/11/perceptron-function-plotting-in-python"},"nextItem":{"title":"[DE] Verf\xe4llt ein Big Ball of Mud?","permalink":"/blog/2023/04/14/big-ball-of-mud-decay"}},"content":"import {GlosRef, BibRef} from \\"../../src/components/References\\";\\nimport {BackButton} from \\"../../src/components/BackButton.js\\";\\n\\n\\n\\nErrata f\xfcr [Beweisen lernen (Springer Verlag 2020)](https://www.math.uni-konstanz.de/mmath/de/book/) von [Junk\\n](https://www.math.uni-konstanz.de/numerik/personen/junk/) und [Treude](https://www.math.uni-konstanz.de/~treude/vita.html).\\nIch hoffe, dass meine Notizen dem Autorenteam zur \xdcberpr\xfcfung und ggf. Korrektur n\xfctzlich sind.\\n\\nZum Hintergrund dieses Blog-Posts gibt es [weiter unten](#hintergrund-aufgabe-178-und-das-kleine-man\xf6ver-das-kostete) mehr Informationen.\\n\\n\\n\\n## Errata\\n\\n:::info\\nStand 21.06.2023. Meine gesammelten Notizen habe ich komplett \xfcberf\xfchrt. Das Kapitel \\"D Tipps zu den \xdcbungen\\" wurde von mir nicht bearbeitet.\\n\\nLieber Google-Nutzer, das offizielle Errata findet sich unter https://www.math.uni-konstanz.de/mmath/de/book/material/errata (abgerufen 21.06.2023). \\n:::\\n\\n\\n### Vergleichsl\xf6sungen\\n\\n| Seite              | Fehlerstelle                                                                            | Korrekturvorschlag                                                                      | Bemerkung                                                                                                                                                                                                 |\\n|--------------------|-----------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\\n| 326 (ML261)        | $0 = dist_d(x, A)inf D_{x,A}$                                                           | $0 = dist_d(x, A) = inf D_{x,A}$                                                        |                                                                                                                                                                                                           |\\n| \\"                  | $a < inf D_{x,A} + \\\\epsilon$                                                            | $u < inf D_{x,A} + \\\\epsilon$                                                            |                                                                                                                                                                                                           |\\n| 321 (ML240)        | und $b \\\\in Min(b)$ gegeben                                                              | und $b \\\\in Min(B)$ gegeben                                                              |                                                                                                                                                                                                           |\\n| 318 (ML230)        | Zu zeigen ist $\\\\exists D \\\\in \\\\R: \\\\forall y,z \\\\in A : d(x,y) \\\\le D$                      | Zu zeigen ist $\\\\exists D \\\\in \\\\R: \\\\forall y,z \\\\in A : d(y, z) \\\\le D$                     | In der ML wird weiter $d(x,y)$ genutzt, obwohl sich der Allquantor auf $y,z$ bezieht. Das w\xe4re im Weiteren zu \xfcberpr\xfcfen, da wir mit der Def. von $B_r^d(x)$ auch $d(x, y) < r$ verstehen.\\n| 316 (ML226)        | Wir definieren $g: \\\\N_{\\\\le N} \\\\rarr \\\\R,$...                                             | Wir definieren $g: \\\\N_{\\\\le n} \\\\rarr \\\\R,$...                                             |\\n| 315 (ML224)        | $d_2(r \\\\cdot u, s \\\\cdot) =$...                                                          | $d_2(r \\\\cdot u, s \\\\cdot u) =$...                                                        |\\n| 312 (ML214)        | $L_y = \\\\{\\\\alpha - 3\\\\beta, 3\\\\alpha + 2\\\\beta, 0)/11 + t \\\\cdot (0,2,1)\\\\vert t \\\\in \\\\R\\\\}$    | $L_y = \\\\{3\\\\alpha + 2\\\\beta, \\\\alpha - 3\\\\beta, 0)/11 + t \\\\cdot (0,2,1)\\\\vert t \\\\in \\\\R\\\\}$    | $u, v$ vertauscht\\n| 308 (ML194, Ende)  | Da $r \\\\in [u]_\\\\text{\\\\textasciitilde}$ auf $u \\\\in X$ und $u \\\\text{\\\\textasciitilde} x$... | Da $r \\\\in [u]_\\\\text{\\\\textasciitilde}$ auf $u \\\\in X$ und $u \\\\text{\\\\textasciitilde} r$... |\\n| 302 (ML178 unten)  | $p(f(b), z) \\\\in P_{f, n-1}(X \\\\setminus \\\\{a\\\\})$                                          | $p(f(b), z) \\\\in P_{f, n}(X \\\\setminus \\\\{a\\\\})$                                            |                                                                                                                                                                                                           |\\n| 302 (ML178 mittig) | \\\\[Wegen Aufgabe 153 gilt\\\\] $\\\\exists x \\\\in U: P_{f, n}(X \\\\setminus \\\\{x\\\\})$               | $\\\\exists x \\\\in U: P_{f, n}(X \\\\setminus \\\\{a\\\\})$                                          | Die Menge, auf die Bezug genommen wird, ist hier $X \\\\setminus \\\\{a\\\\}$                                                                                                                                      |\\n| 299 (ML172)        | zeigt Aufgabe 163                                                                       | zeigt Aufgabe **171**                                                                   |                                                                                                                                                                                                           |\\n| 297 (ML168)        | sei dazu $A \\\\in D_{\\\\alpha \\\\cdot f, n + 1}$                                              | sei dazu $A \\\\in D_{f, n + 1}$                                                           |                                                                                                                                                                                                           |\\n| 295 (unten)        | $z + f(b) \\\\in S_{n-1}(X \\\\setminus \\\\{a\\\\})$                                               | $z + f(b) \\\\in S_{n}(X \\\\setminus \\\\{a\\\\})$                                                 |\\n| 288, 289 (ML147)   |                                                                                         |                                                                                         | Es wird auf (3.16) Bezug genommen, aber $\\\\forall n \\\\in \\\\N_{>1}: n - 1 \\\\in \\\\N$ ist Axiom **(3.18)**                                                                                                        |\\n| 277 (ML106)        |                                                                                         |                                                                                         | f\xfcr \\"$\\\\impliedby$\\" m\xfcsste noch $y \\\\in U$ gezeigt werden   \\n| 272 (ML89)         |                                                                                         |                                                                                         | Es wird auf eine Symmetrie von $\\\\le$ Bezug genommen, aber in dem Kontext ist $\\\\le$ Antisymmetrisch (**Satz 3.11** und \xdc89)\\n| 269 (ML78)         | was auf den Widerspruch $0 \\\\ge 1$ f\xfchrt                                                 | was auf den Widerspruch $1 \\\\ge 2$ f\xfchrt                                                 | $x \\\\in \\\\N$, also $x \\\\ne 0$. Im indirekten Beweis wird $x \\\\ge x + 1$ mit $x=0$ verwendet\\n| 258 (ML44)         | mit $A$ anstelle von $A$ und $B$ anstelle von $B$                                       | mit $A$ anstelle von $E$ und $B$ anstelle von $F$                                       | \\n\\n### Ideen: Metrische R\xe4ume\\n\\n| Seite                 | Fehlerstelle             | Korrekturvorschlag                | Bemerkung                                                                                           |\\n|-----------------------|--------------------------|-----------------------------------|-----------------------------------------------------------------------------------------------------\\n| 166 (\xdc274)            | $B_r(A)$                 | $B_r^d(A)$                        |                                                                                                     |\\n| 167                   | $B_r(u)$                 | $B_r^d(u)$                        | Mehrfachnennung auf dieser Seite, ohne auf die Metrik Bezug zu nehmen                               |\\n| 156 (\xdc248)            | $s < sup M$              | $u \\\\in M: u < sup M$              | $s$ ist vorgegeben mit $s \\\\in O_M$, damit gilt ja bereits $s \\\\ge sup M$ und damit auch $s \\\\ge m$    |\\n| 154 (\xdc240)            | $Min(b)$                 | $Min(B)$                          |                                                                                                     |\\n| 147 (\xdc226)            | $D: X^n \\\\times X^n$, ... | $D: X^n \\\\times X^n \\\\rarr \\\\R$, ... |  |\\n\\n### Ideen: \xc4quivalenzklassen\\n\\n| Seite                  | Fehlerstelle                                                                   | Korrekturvorschlag                                                                        | Bemerkung                                                                                          |\\n|------------------------|--------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------\\n| 132 (unten)            | $R([a \\\\cdot u]_\\\\text{\\\\textasciitilde}) = R([a \\\\cdot u]_\\\\text{\\\\textasciitilde})$ | $R(a \\\\boxdot [u]_\\\\text{\\\\textasciitilde}) = R([a \\\\cdot u]_\\\\text{\\\\textasciitilde})$         |                                                                                                    |\\n\\n\\n\\n### Training\\n\\n| Seite     | Fehlerstelle                                                       | Korrekturvorschlag                                                 | Bemerkung                                                              |\\n|-----------|--------------------------------------------------------------------|--------------------------------------------------------------------|------------------------------------------------------------------------|\\n| 94        | $\\\\{t \\\\in U^3: ((t_1 \\\\in A) \\\\land (t_2 \\\\in B)) \\\\land (t_3 \\\\in C)\\\\}$ | $\\\\{t \\\\in U^3: (t_1 \\\\in A) \\\\land (t_2 \\\\in B) \\\\land (t_3 \\\\in C)\\\\}$   |                                                                        | |\\n| 83 (oben) | f\xfchrt zur Langform $U = \\\\{y \\\\in \\\\Z: \\\\exists x \\\\in \\\\Z : y = g(z)\\\\}$ | f\xfchrt zur Langform $U = \\\\{y \\\\in \\\\Z: \\\\exists x \\\\in \\\\Z : y = g(x)\\\\}$ | in (3.10) wird f\xfcr die Gleichung ebenfalls die falsche Variable genutzt | |\\n| 82 (\xdc102) | Zeige $\\\\exists a \\\\in \\\\R : g [R_{\\\\ge 0}] = \\\\R_{\\\\ge a}$.             | Zeige $\\\\exists a \\\\in \\\\R : g [\\\\R_{\\\\ge 0}] = \\\\R_{\\\\ge a}$.            |  | |\\n\\n### Rechtschreibung / Grammatik / Druckfehler\\n\\n\\n| Seite                                               | Fehlerstelle                                                             | Korrekturvorschlag                                                               | \\n|-----------------------------------------------------|--------------------------------------------------------------------------|----------------------------------------------------------------------------------|\\n| 325 (ML259)                                         | Insebsondere ist $dist_d(x,A) = 0$                                       | ~~Insebsondere~~ Insbesondere ist $dist_d(x,A) = 0$                              |\\n| 295 (ML160)                                         | die Argumentation wurde ist dir eventuell                                | die Argumentation ~~wurde~~ ist dir eventuell                                    |\\n| 294                                                 | zu zeigen ist $P(A)\\\\mid = 2^{\\\\mid A \\\\mid}$                               | zu zeigen ist $\\\\mid P(A)\\\\mid = 2^{\\\\mid A \\\\mid}$                                  |\\n| 290                                                 | ergibt $m = \\\\mid n \\\\mid - \\\\mid A \\\\mid \\\\in \\\\N$                            | ergibt $m = n - \\\\mid A \\\\mid \\\\in \\\\N$                                              |\\n| 284 (ML132)                                         | und mit Aufgabe 132 ergibt sich schliesslich                             | und mit Aufgabe **131** ergibt sich schliesslich                                 |\\n| 166 (unten)                                         | dass sie sich garnicht scheiden                                          | dass sie sich garnicht ~~scheiden~~ schneiden                                    |\\n| 149                                                 | In einer Kugel mit em Radius                                             | In einer Kugel mit ~~em~~ dem Radius                                             |\\n| 125 (unten)                                         | und mit Aufgabe 179 dann                                                 | und mit Aufgabe ~~179~~ 180 dann                                                 |\\n| 120 (oben)                                          | Mit Teil (b) von Aufgabe 179 folgt hieraus                               | Mit Teil (b) von Aufgabe ~~179~~ 180 folgt hieraus                               |\\n| 117                                                 | Ausgangspizza in $a_2 \\\\cdot b_2$ Teile auftritt                          | Ausgangspizza in $a_1 \\\\cdot b_2$ Teile auftritt                                  |\\n| 104 (unten)                                         | in F\xfcr-Alle-Aussage \xfcber $\\\\N_0$ zu verwandeln                            | in F\xfcr-Alle-~~Aussage~~Aussagen \xfcber $\\\\N_0$ zu verwandeln                        |\\n| 102 (oben)                                          | auf $\\\\emptyset$ gibt es nur ein einzige Funktion                         | auf $\\\\emptyset$ gibt es nur ~~ein~~ eine einzige Funktion                        |\\n| 37 (unten)                                          | Dies folgt durch Anwendung von Satz 2.11 bei Ersetzung von $A$ durch $E$ | Dies folgt durch Anwendung von Satz ~~2.11~~ 2.9 bei Ersetzung von $A$ durch $E$ |\\n| 37 (unten, folgt der vorher erw\xe4hnten Fehlerstelle) | Dies folgt durch Anwendung von Satz 2.9 bei Ersetzung                    | Dies folgt durch Anwendung von Satz ~~2.9~~ 2.11 bei Ersetzung                   |\\n### Anmerkungen\\n\\n| Seite                    | Bemerkung                                                                                            |\\n|--------------------------|------------------------------------------------------------------------------------------------------\\n| 148 **Definition 5.9**   | vielleicht bietet es sich hier bereits an, in der Definition den Begriff \\"offene Kugel\\" zu verwenden |\\n| 118 **Definition 4.1** | Sei $\\\\text{\\\\textasciitilde}$ eine \xc4quivalenzrelation auf einer **nicht leeren**  Menge $X$                            |\\n| 91 **Definition 3.24** | Informatiker w\xfcrden sich hier \xfcber die Erw\xe4hnung \\"partielle Funktion\\" freuen                         |\\n\\n<sup>*</sup>ML = Musterl\xf6sung\\n\\n<sup>*</sup>\xdc = \xdcbung\\n\\n\\n\\n## Hintergrund: Aufgabe 178 und das kleine Man\xf6ver, das kostete\\n\\nIn der L\xf6sung zu **Aufgabe 178** aus [Beweisen lernen](https://www.math.uni-konstanz.de/mmath/de/book/) - und der hierzu vorbereitenden **Aufgabe 158** - bin ich bei der Nachbereitung des L\xf6sungsvorschlages nicht zu dem gleichen Ergebnis gekommen - der Definitionsbereich einer Funktion wurde falsch angegeben. Den Versuch, die Falschaussage nachzuweisen, habe ich hier in diesem Post dokumentiert. \\n\\n![](img/whiteboard.png)\\n\\nWeitere Notizen bzgl. eventueller Fehler hinsichtlich Logik- und Druck fasse ich in dem o.a. [Errata](#errata) zusammen. \\n\\n\\n## Aufgabe 158\\n\\n##### Notation\\n$U$: Elementuniversum\\n\\n$\\\\Epsilon_n$: Menge aller endlichen Mengen mit der M\xe4chtigkeit $n$\\n\\n$P(K)$: Potenzmenge von $K$ mit $K \\\\subset U$\\n\\n### Aufgabenstellung\\nEs ist per Induktion zu beweisen, das\\n\\n$\\\\forall n \\\\in \\\\N_0: \\\\forall k \\\\in (N_0)_{\\\\le n}: \\\\forall X \\\\in D_k: | S_k(X)| = 1$\\n\\nFolgendes steht mit den Voraussetzungen zur Verf\xfcgung:\\n\\n$f: X \\\\mapsto R$\\n\\n$D_n:=\\\\{X \\\\in \\\\Epsilon_n : X \\\\subset Def(f) \\\\}$\\n\\n$S_0: D_0 \\\\to P(\\\\R),\\\\space X \\\\mapsto \\\\{0\\\\}$\\n\\n$S_{n+1}: D_{n+1} \\\\to P(\\\\R),\\\\space X \\\\mapsto \\\\{f(x) + s \\\\space | \\\\space (x, s) \\\\in X \\\\times S_{n}(X \\\\setminus \\\\{x\\\\})\\\\}$\\n\\n### Induktionsschritt\\nDie Autoren wollen die Eindeutigkeit des Elementes $x \\\\in U: x \\\\in S_{n+1}(X)$ \xfcber\\n\\n$\\\\exists! x \\\\in U: x \\\\in S_{n+1}(X)$\\n\\nzeigen. Hierzu muss die Existenz und die Eindeutigkeit des Elementes gezeigt werden, so dass wegen $\\\\forall u,v \\\\in S_{n+1}(X): u = v$\\nauch $|S_{n+1}(X)| = 1$ folgt (u.a. wegen **Aufgabe 99** und **Aufgabe 153**).\\n\\n### Argumentation\\nHierzu sei\\n\\n$u:= f(a)+s, v:= f(b)+t$\\n\\nDie Autoren zeigen einige Schritte weiter, dass mit der Induktionsvoraussetzung f\xfcr $s$ folgt:\\n\\nDa $f(a) + s \\\\in S_{n+1}(X)$, ist $s \\\\in S_n(X \\\\setminus \\\\{a\\\\})$.\\n\\nMit $b \\\\in X \\\\setminus \\\\{a\\\\}$ soll dann $s = f(b) + z$ gezeigt werden, wobei wieder die Induktionsvoraussetzung angewendet wird und $z \\\\in S_{n-1}(X \\\\setminus \\\\{a\\\\} \\\\setminus \\\\{b\\\\})$ gefunden wird.\\n\\n### Fehlerstelle\\nIn einem weiteren Schritt wird dann behauptet, dass $f(b) + z \\\\in S_{n-1}(X \\\\setminus\\\\{a\\\\})$ ist, und deswegen $f(b)+z \\\\in \\\\{s\\\\}$ und folglich $f(b) + z = s$. Das scheint der Fehler zu sein, denn f\xfcr $s$ wurde gezeigt: $s \\\\in S_n(X \\\\setminus \\\\{a\\\\})$:\\n\\nWenn $s \\\\in S_n(X \\\\setminus \\\\{a\\\\})$ und $s \\\\in S_{n-1}(X \\\\setminus\\\\{a\\\\})$ gelten w\xfcrde, dann w\xfcrde f\xfcr\\n\\n$f(c)+s \\\\in S_n(X \\\\setminus \\\\{a\\\\})$ und $f(b)+t \\\\in S_{n-1}(X \\\\setminus \\\\{a\\\\})$ auch $f(c)+s = f(b)+t$ gelten (f\xfcr $c, b \\\\in X \\\\setminus \\\\{a\\\\}$).\\n\\nDa $s = f(b) + t$ wegen $f(b) + t \\\\in S_{n-1}(X \\\\setminus \\\\{a\\\\})$ und $s \\\\in S_{n-1}(X \\\\setminus\\\\{a\\\\})$ folgt dann auch\\n$f(c) + s = s$, was im Widerspruch zu $f(c) + s = f(c) + s$ steht und offensichtlich nicht $\\\\forall c \\\\in X \\\\setminus \\\\{a\\\\}$ gilt."},{"id":"/2023/04/14/big-ball-of-mud-decay","metadata":{"permalink":"/blog/2023/04/14/big-ball-of-mud-decay","editUrl":"https://github.com/thorstensuckow/thorsten.suckow-homberg.de/tree/main/blog/2023-04-14-big-ball-of-mud-decay/index.md","source":"@site/blog/2023-04-14-big-ball-of-mud-decay/index.md","title":"[DE] Verf\xe4llt ein Big Ball of Mud?","description":"Ein Kommentar zu einem Kommentar zu Eberhard Wolff\'s Episode 159 - Big Ball of Mud als Teil von Software-Architektur im Stream. Eine englische \xdcbersetzung findet sich hier.","date":"2023-04-14T00:00:00.000Z","formattedDate":"April 14, 2023","tags":[{"label":"Software Architecture","permalink":"/blog/tags/software-architecture"},{"label":"Comment","permalink":"/blog/tags/comment"},{"label":"Personal","permalink":"/blog/tags/personal"}],"readingTime":7.18,"hasTruncateMarker":false,"authors":[{"name":"Thorsten Suckow-Homberg","url":"https://thorsten.suckow-homberg.de","imageURL":"https://avatars.githubusercontent.com/u/823135","key":"thorstensuckow"}],"frontMatter":{"title":"[DE] Verf\xe4llt ein Big Ball of Mud?","authors":["thorstensuckow"],"tags":["Software Architecture","Comment","Personal"],"enableComments":true},"prevItem":{"title":"[DE] \\"Beweisen lernen\\" - Errata","permalink":"/blog/2023/05/01/errata-beweisen-lernen"},"nextItem":{"title":"Does a big ball of mud decay?","permalink":"/blog/2023/04/14/big-ball-of-mud-decay/index_en"}},"content":"import {GlosRef, BibRef} from \\"../../src/components/References\\";\\nimport {BackButton} from \\"../../src/components/BackButton.js\\";\\n\\n\\n:::info \\n_Ein Kommentar zu einem Kommentar zu [Eberhard Wolff\'s](https://ewolff.com/) [Episode 159 - Big Ball of Mud](https://software-architektur.tv/2023/03/31/folge159.html) als Teil von [Software-Architektur im Stream](https://software-architektur.tv)_. Eine englische \xdcbersetzung findet sich [hier](/blog/2023/04/14/big-ball-of-mud-decay/index_en).\\n:::\\n\\n## Verf\xe4llt ein Big Ball of Mud?\\n\\nDurch den Fortschritt der Technologie und der Arbeit von Leuten wie [Brooks](https://en.wikipedia.org/wiki/Fred_Brooks), [Buschmann](https://en.wikipedia.org/wiki/Pattern-Oriented_Software_Architecture) und [Booch](https://en.wikipedia.org/wiki/Grady_Booch) wurde uns Entwicklern der Weg vom mikroskopischen ins makroskopische geebnet. Lang vorbei sind die Zeiten, in denen schrankhohe Rechnersysteme nah an der Infrastruktur programmiert werden mu\xdften. <br />\\nJedoch, wer heute den Mythischen Mann-Monat <BibRef name=\\"MMM\\" /> liest und \xfcber die damals zur Verf\xfcgung stehende Technik schmunzelt, der wird sp\xe4testens bei der Aktualit\xe4t der anderen erw\xe4hnten Probleme betreffs Organisation und Planung von Projekten rasch in die Gegenwart zur\xfcckgeworfen. Aus Eskapismus wird ein erhobener Finger: Das Lesevergn\xfcgen mahnt pl\xf6tzlich zur Reflektion. Die Probleme von damals sind heute immer noch aktuell, und die Entwicklung der Technik verlief bis dato offensichtlich ungleich schneller als die von **Planung und Organisation**.\\n\\nDie Motivation und das Wissen darum, wie man heutzutage Schablonen f\xfcr die Erstellung von Objekten und Klassen nutzt und all seine Erfahrung in das Schneiden und Zusammenstecken derselben zur Abstraktion einer Fachlichkeit einfliessen l\xe4sst, ist dann nicht zuletzt auch der Gang of Four <BibRef name=\\"Gof\\" /> zu verdanken, die Entwurfsmuster en vogue gemacht haben und in einer ganzen Generation von Programmierern das Interesse an Software Design zu wecken wussten. Aber: Der Schreiner mag in der Lage sein, einen Satz Fensterrahmen passend zu dem \xe4usseren Erscheinungsbild des Hauses zu zimmern. Das h\xfcbscheste Fenster hilft aber nichts, wenn niemand weiss wie man es einbaut, geschweige denn \xf6ffnet und wieder schliesst.\\n\\nWir machen den gedanklichen Sprung zur\xfcck in unsere Dom\xe4ne und wissen: Solche Elemente werden dann in Menge problematisch, wenn ihre Vereinigung in einem System funktional sein und nat\xfcrlich ein m\xf6glichst wartbares Gesamtgebilde ergeben soll. Auch hier helfen Erfahrung und bew\xe4hrte Blaupausen, damit sich Entwickler*in  nicht in einem undurchdringlichen Dickicht von Verantwortlichkeiten und Assoziationen verliert. <br />\\nLeider gelingt das nicht ganz so oft so gut.  Wenn wir nach einem frischen Pull \xfcber das Sein des Spaghetti-Codes eines Kollegen sinnieren, oder wir uns  selbst dabei ertappen, Schichten durch das freitag-mittagliche Voranstellen eines `new` vor einer low-level-Klasse in einer high-level-Klasse zu durchbrechen, dann ist man ihm schon einen Schritt n\xe4her, dem ber\xfcchtigten **<GlosRef name=\\"Big Ball of Mud\\" file=\\"sd.bigballofmud\\" />** (**BBOM**), den [Eberhard Wolff](https://ewolff.com) in der Folge 159 seiner Reihe [**Softwarearchitektur im Stream**](https://software-architektur.tv/2023/03/31/folge159.html) mit gewohnter Pr\xe4zision vorgestellt und in Ursache und Wirkung analysiert hat.  \\n\\nIn der Folge beruft er sich auf das Paper von [Foote und Yoder](http://www.laputan.org/mud/), in dem - vor \xfcber 20 Jahren - die Frage gestellt wurde, inwieweit denn so ein **Big Ball of Mud** \xfcberhaupt ein **Anti-Pattern** sei: Das man diese quellcodegewordene Negation einer Struktur so h\xe4ufig in Systemen vorfindet sollte doch eigentlich den Schluss zulassen, dass es sich hierbei gar nicht um ein **Anti-Pattern**, sondern gegebenenfalls um ein erprobtes und bew\xe4hrtes Konzept in der Software-Entwicklung handelt, n\xe4mlich das des **geringsten Widerstandes**. Dieser kennzeichnet sich hier durch die Vermeidung von Up-Front Architektur. Stattdessen richtet sich der Fokus direkt auf die Umsetzung von Features und Funktionalit\xe4t, auch, aber nicht ausschlie\xdflich, wenn Architektur als zu vermeidender Kostenfaktor verstanden wird: \\n\\n> _\\"Therefore, focus first on features and functionality, then focus on architecture and performance.\\"_ [<sup>[1]</sup>](#bbompaper)\\n\\nMan k\xf6nnte daraus schlie\xdfen, man solle mehr Verst\xe4ndnis f\xfcr den Entwickler zeigen, der diesen Weg w\xe4hlt oder w\xe4hlen mu\xdf. Auch, wenn infolgedessen der Ansatz eines durch die Zuarbeit verschiedener Teams entstehenden Software-Fundamentes \xfcber das Fehlen von allgemein als gesch\xe4ftswertig erachteter Best Practices mit jedem Commit ein bisschen mehr verhindert oder aufgel\xf6st wird. Die Frage hat wohl auch _Foote und Yoder_ besch\xe4ftigt: \\n\\n> _\\"[\u2026] we seek not to cast blame upon those who must wallow in these mires. In part, our attitude is to \u2018hate the sin, but love the sinner\u2018\\"_. [<sup>[1]</sup>](#bbompaper)\\n\\nWenn der **Big Ball of Mud** als Konsequenz dieses Konzeptes als Struktur eines Systems erkannt wird, das keine Struktur beinhaltet, dann k\xf6nnen wir _ex falso quodlibet_ auch jede beliebige Aussage als g\xfcltig annehmen, wenn wir uns bei der Beschreibung dieses Systems darauf berufen, dass diesem System eben eine Struktur innewohnt: Und also ist ein **Big Ball of Mud** eben ein Entwurfsmuster. **Aber!** So ein Gebilde bekommt man ganz gut beliebig hin, so wie ein Zimmermann sicher auch ohne Kenntnis dar\xfcber, wie man M\xf6rtel anr\xfchrt, irgendwie in der Lage sein wird, Ziegelsteine um seine Fenster herum zu stapeln.\\n\\nUnter gewissen Umst\xe4nden kann das bewusste Zulassen zunehmender Entropie in einem Software System dabei helfen, Kontexte zu identifizieren und die Fachlichkeit zu verstehen, um Schichten herauszumeisseln und Grenzen zu schneiden. [Evans](https://www.domainlanguage.com/), [Fowler](https://martinfowler.com) und auch _Foote und Yoder_ sind sich in jedem Fall einer Sache sicher: **Refactoring** muss st\xe4ndig erfolgen, um nicht die Kontrolle zu verlieren. \\n\\n> _\\"The way to arrest entropy in software is to refactor it.\\"_ [<sup>[1]</sup>](#bbompaper)\\n\\nDabei ist man sich aber auch des zweiten Hauptsatzes der Thermodynamik bewusst: Die Entropie kann nicht abnehmen, sie kann gleich bleiben, oder sie kann zunehmen. Will man letzteres verhindern, r\xe4t Evans  dazu, den **BBOM** zu demarkieren:\\n\\n> _\\"Draw a boundary around the entire mess and designate it a big ball of mud. Do not try to apply sophisticated modeling within this context. Be alert to the tendency for such systems to sprawl into other contexts.\\"_ <BibRef name=\\"DDDR\\" pp=\\"38\\" />\\n\\n_Foote und Yoder_ haben eine \xe4hnliche Empfehlung, die sie in dem Paper etwas schwungvoller mit [_\\"Sweeping it under the rug\\"_](http://www.laputan.org/mud/mud.html#SweepingItUnderTheRug) bezeichnen:\\n\\n> _\\"Therefore, if you can\u2019t easily make a mess go away, at least cordon it off. This restricts the disorder to a fixed area, keeps it out of sight, and can set the stage for additional refactoring.\\"_ [<sup>[1]</sup>](#bbompaper)\\n\\nEgal ob Grenzen gezogen werden oder man den **BBOM** unter den Teppich schaufelt: Eben so kommen wir \xfcber grobgranulare Schnittstellen an ausgew\xe4hlte Funktionalit\xe4t, und wir lassen gleichzeitig nicht zu, dass die z\xe4he Masse aus dem **BBOM** in unser System tropft und dort Gestalt annimmt (oder eben auch nicht). Konsequent katalogisiert [Robert C. Martin](https://en.wikipedia.org/wiki/Robert_C._Martin) dann auch **Viscosity** in die Kategorie **Design Smell** ein <BibRef name=\\"ASD\\" pp=\\"88\\" />.\\n\\n[Mein Kommentar w\xe4hrend der Folge lautete](https://youtu.be/Gqs8zLXei7Q?t=2200), dass es in Anbetracht all dessen ohnehin erschwerend hinzukommen kann, dem Management die Sinnhaftigkeit von Tests zu vermitteln.\\nDer Antwort von _Eberhard Wolff_ darauf entnahmen ich, dass in den von ihm beschriebenen Szenarien Tests _a priori_ als sinnvoll verstanden werden und damit Teil der Entwicklung sind (zumindest aber Tests durch entsprechende Fachkr\xe4fte): Umso wichtiger sind diese Tests, wenn sich schon zu Beginn des Projektes zeigt, dass wegen fehlender Architekturplanung und wahrscheinlich diffuser Funktions- und Modulgrenzen Funktionalit\xe4t sichergestellt werden _muss_.\\n\\nVon dieser Implikation bin ich in meinem Kommentar nicht ausgegangen. Was ich meinte, war: Wenn Architektur keinen Gesch\xe4ftswert hat, und dies zu einem **BBOM** f\xfchrt, dann kann das auch zu dem [Broken Window Effekt](https://en.wikipedia.org/wiki/Broken_windows_theory) f\xfchren. _Hunt und Thomas_ raten dazu: _\\"Dont live with broken Windows.\\"_ <BibRef name=\\"PP\\" pp=\\"7\\" />, und _Foote und Yoder_ beziehen aus \xe4hnlichen Erfahrungen die Ensicht:\\n\\n> _\\"If such sprawl continues unabated, the structure of the system can become so badly compromised that it must be abandoned. As with a decaying neighborhood, a downward spiral ensues.\\"_ [<sup>[1]</sup>](#bbompaper)\\n\\nWenn Geld und Zeit in einem Projekt knapp sind, und Architektur damit einhergehend als nicht zielf\xfchrend verstanden wird, dann ist die Wahrscheinlichkeit eher nicht gering, dass auch das Testing der Software \u2013 ich meine hiermit die Art von Tests, die der Entwickler selber schreibt, um sein System zu verifizieren - ebenfalls als negativer Kostenfaktor gef\xfchrt wird. Sollte das Gegenteil der Fall sein, dann k\xf6nnte die fehlende Architektur und der entstehende **BBOM** das eingeworfene Fenster in der Nachbarschaft sein, das dazu f\xfchrt, dass noch  mehr Fenster eingeworfen werden. Der Entwickler, der sich bewusst nicht innerhalb der Schichten bewegt, sondern vor allem dazwischen, sieht sich dazu veranlasst, seinen Code nicht durch Tests zu dokumentieren, weil er dem System die Sinnhaftigkeit ob der fehlenden Struktur aberkennt. Die Projektbeteiligten akzeptieren ein eingeworfenes Fenster wahrscheinlich eher, wenn daneben schon eins existiert.\\n\\nWenn alle Projektbeteiligten sich darauf verst\xe4ndigen, dass Grenzen und Fachlichkeiten auch durch unstrukturiertes, organisches Wachstum erkannt werden k\xf6nnen, und das System erst sp\xe4ter \\"ent-steht\\", k\xf6nnen Strukturen also sp\xe4ter nachgezogen werden: Letztendlich ist eine z\xe4he Masse etwas Formbaren \xe4hnlich, und die Dynamik unserer Handwerkskunst steckt in dem Namen **Soft**ware. Besteht das Fundament m\xf6glichst nicht aus einem **Throw Away**, dann sollte auch allen Projektbeteiligten die Notwendigkeit von Tests klar sein: Die R\xe4son aller Verantwortlichen verhindern somit ein erstes eingeworfenes Fenster, und es ist an Fachexperten und Programmierern, dass es nicht zu weiteren kommt. \\n\\n\\n---- \\nReferences\\n\\n - [<sup>[1]</sup> Foote, Yoder: \\"Big Ball of Mud\\"; University of Illinois, 1999](http://www.laputan.org/mud/mud.html#SweepingItUnderTheRug) <a name=\\"bbompaper\\"></a>\\n - [Eberhard Wolff: \\"Software-Architektur im Stream, Folge 159: Big Ball of Mud\\"](https://software-architektur.tv/2023/03/31/folge159.html)"},{"id":"/2023/04/14/big-ball-of-mud-decay/index_en","metadata":{"permalink":"/blog/2023/04/14/big-ball-of-mud-decay/index_en","editUrl":"https://github.com/thorstensuckow/thorsten.suckow-homberg.de/tree/main/blog/2023-04-14-big-ball-of-mud-decay/index_en.mdx","source":"@site/blog/2023-04-14-big-ball-of-mud-decay/index_en.mdx","title":"Does a big ball of mud decay?","description":"A comment on a comment to Eberhard Wolff\'s recent episode 159 of Software-Architektur im Stream - Big Ball of Mud. This is a translation of this article, which was originally published in german language.","date":"2023-04-14T00:00:00.000Z","formattedDate":"April 14, 2023","tags":[{"label":"Software Architecture","permalink":"/blog/tags/software-architecture"},{"label":"Comment","permalink":"/blog/tags/comment"},{"label":"Personal","permalink":"/blog/tags/personal"}],"readingTime":7.015,"hasTruncateMarker":false,"authors":[{"name":"Thorsten Suckow-Homberg","url":"https://thorsten.suckow-homberg.de","imageURL":"https://avatars.githubusercontent.com/u/823135","key":"thorstensuckow"}],"frontMatter":{"title":"Does a big ball of mud decay?","authors":["thorstensuckow"],"tags":["Software Architecture","Comment","Personal"],"unlisted":true,"enableComments":true},"prevItem":{"title":"[DE] Verf\xe4llt ein Big Ball of Mud?","permalink":"/blog/2023/04/14/big-ball-of-mud-decay"},"nextItem":{"title":"bcc-header issues with Horde_Mime_Mail","permalink":"/blog/2023/03/20/horde-mail-ignores-bcc"}},"content":"import {GlosRef, BibRef} from \\"../../src/components/References\\";\\nimport {BackButton} from \\"../../src/components/BackButton.js\\";\\n\\n\\n:::info\\n_A comment on a comment to [Eberhard Wolff\'s](https://ewolff.com/) recent episode 159 of [Software-Architektur im Stream - Big Ball of Mud](https://software-architektur.tv/2023/03/31/folge159.html)_. This is a translation of [this article](/blog/2023/04/14/big-ball-of-mud-decay), which was originally published in german language.\\n:::\\n\\n\\nWhile the pioneers of computer science had to program computer systems close to the infrastructure, as technology progressed and thanks to the tireless work of people like  [Brooks](https://en.wikipedia.org/wiki/Fred_Brooks), [Buschmann](https://en.wikipedia.org/wiki/Pattern-Oriented_Software_Architecture) and [Booch](https://en.wikipedia.org/wiki/Grady_Booch), we found the way from the microscopic to the macroscopic. <br />\\nHowever, if you read the Mythical Man Month <BibRef name=\\"MMM\\" /> today and smile about the technology that was available at the time, you will quickly be thrown back to our present time, where problems regarding the organization and planning of projects persist. A raised finger suddenly calls for reflection: The problems of that time are still relevant today. Obviously, the development of technology has been much faster than that of planning, organization and realization of projects.\\n\\nThe motivation and knowledge of how to use templates to create objects and classes, and how to use all of our experience for cutting and assembling them into abstractions of a technicality, has gained momentum since the Gang of Four <BibRef name=\\"Gof\\" /> sparked an interest in software design in a generation of programmers. But although the carpenter may be able to carve a set of window frames to match the exterior of the house, the prettiest window is of no use if nobody knows how to install it, let alone open and close it.\\n\\nIn our domain, such elements become problematic when their combination is supposed to be functional, and if it should resemble a maintainable structure as a whole. Experience and proven blueprints help to ensure that developers do not lose themselves in a jungle of tangled responsibilities and associations when integrating such elements.\\n\\nUnfortunately, that doesn\'t always work out so well. When we catch ourselves breaking layers by adding a `new` in front of a lower-level class in a high-level class, we are one step closer to the notorious **<GlosRef name=\\"Big Ball of Mud\\" file=\\"sd.bigballofmud\\" />** (**BBOM**), which [Eberhard Wolff](https://ewolff.com) presented and analyzed in episode 159 of his series [\\"Software Architecture im Stream\\"](https://software-architektur.tv/2023/03/31/folge159.html) with his usual precision.\\n\\nIn this episode, he also refers to the paper of [Foote and Yoder](http://www.laputan.org/mud/), in which - more than 20 years ago - the question was asked to what extent such a **Big Ball of Mud** is an anti-pattern: That this negation of a structure is so often found in systems should actually lead to the conclusion that this is not an anti-pattern at all, but rather a tried and tested concept in software development, namely that of **least resistance**. This is characterized here by the avoidance of up-front architecture. Instead, the focus is directly on the implementation of features and functionality, also, but not exclusively, if architecture is understood as a cost factor to be avoided:\\n\\n> _\\"Therefore, focus first on features and functionality, then focus on architecture and performance.\\"_ [<sup>[1]</sup>](#bbompaper)\\n\\nA conclusion could be that we should show more understanding for the developer who chooses or must choose to develop like this. Even if such an approach prevents or dissolves a solid fundament for a software system due to the lack of best practices that are generally considered to be valuable for business. _Foote and Yoder_ were probably also concerned with the question:\\n\\n> _\\"[\u2026] we seek not to cast blame upon those who must wallow in these mires. In part, our attitude is to \u2018hate the sin, but love the sinner\u2018\\"_. [<sup>[1]</sup>](#bbompaper)\\n\\nIf the **Big Ball of Mud** is ultimately itself a structure that contains no structure, similar to how the empty set is itself a set, then we can ex falso quodlibet accept any statement as valid if we assume that such a system has an inherent structure: And so a **Big Ball of Mud** is a design pattern.\\n\\n**But!** A structure like this can be done quite easily with no experience, just as a carpenter will probably be able to stack bricks around his window without any knowledge of how to mix mortar.\\n\\nUnder certain circumstances, however, consciously allowing entropy to take over in a software system can also help to identify contexts and understand the technicalities in order to carve out layers and cut boundaries. In any case, [Evans](https://www.domainlanguage.com/), [Fowler](https://martinfowler.com) and also _Foote and Yoder_ are sure of one thing: refactoring must be done constantly in order not to lose control.\\n\\n> _\\"The way to arrest entropy in software is to refactor it.\\"_ [<sup>[1]</sup>](#bbompaper)\\n\\nHowever, one is also aware of the second law of thermodynamics: entropy cannot decrease, it can remain the same, or it can increase. If you want to prevent the latter, Evans advises to create a boundary around the **BBOM**:\\n\\n> _\\"Draw a boundary around the entire mess and designate it a big ball of mud. Do not try to apply sophisticated modeling within this context. Be alert to the tendency for such systems to sprawl into other contexts.\\"_ <BibRef name=\\"DDDR\\" pp=\\"38\\" />\\n\\n_Foote and Yoder_ have a similar recommendation, which they more eloquently call [_\\"Sweeping it under the rug\\"_](http://www.laputan.org/mud/mud.html#SweepingItUnderTheRug) in their paper:\\n\\n> _\\"Therefore, if you can\u2019t easily make a mess go away, at least cordon it off. This restricts the disorder to a fixed area, keeps it out of sight, and can set the stage for additional refactoring.\\"_ [<sup>[1]</sup>](#bbompaper)\\n\\nIt doesn\'t matter whether the **BBOM** is shoveled under the carpet or safe boundaries are created: It allows us to get selected functionality via coarse-grained interfaces out of the **BBOM**, and at the same time we don\'t allow the viscous mass to drip into our system.\\n\\nConsequently, [Robert C. Martin](https://en.wikipedia.org/wiki/Robert_C._Martin) also cataloged **Viscosity** in the category **Design Smell** <BibRef name=\\"ASD\\" pp=\\"88\\" />.\\n\\n[My comment during the episode](https://youtu.be/Gqs8zLXei7Q?t=2200) was that, given all of this, communicating the value of testing to management can be an added complication. I gathered from Eberhard Wolff\'s answer that in the scenarios he described, tests are understood to be useful a priori and are therefore part of the development process: It is mandatory to verify functionality due to the lack of architectural planning, resulting in diffuse modular boundaries.\\n\\nI did not assume this implication in my comment. What I meant was: If architecture is seen as a cost factor or other conditions prevail that prevent architecture, and thus leads to a **BBOM**, then this can also lead to the [Broken Window Effect](https://en.wikipedia.org/wiki/Broken_windows_theory). Hunt and Thomas have already advised: \\"Don\'t live with broken Windows.\\" <BibRef name=\\"PP\\" pp=\\"7\\" />, and Foote and Yoder conclude from similar experiences:\\n\\n> _\\"If such sprawl continues unabated, the structure of the system can become so badly compromised that it must be abandoned. As with a decaying neighborhood, a downward spiral ensues.\\"_ [<sup>[1]</sup>](#bbompaper)\\n\\nIf money and time are tight in a project and the architecture is not understood to be of value, then there is a probability that testing the software - I understand this as the kind of tests that the developer writes for verifying his code - is also seen as a negative cost factor. If the opposite is true, then the missing architecture and the resulting **BBOM** could be the broken window in the neighborhood, causing even more windows to be smashed. The developer who consciously does not move within the layers, but in between, feels compelled not to document his code through tests because he may fail to see any value of his work in the end. Those involved in the project are more likely to accept a broken window if there is already one next to it.\\n\\nIf everyone involved in the project agrees that limits and technicalities can also be recognized through unstructured, organic growth, and the system only emerges later, structures can added later: Ultimately, mud is a mass that is malleable, and the dynamic of our craftsmanship is in the name **soft**ware. If the foundation does not consist of a **Throw Away**, then all those involved in the project should be aware that testing is required: the rationale of all those responsible prevents the first window being thrown in, and it is up to the technical experts and programmers to ensure that there won\'t ever be any.\\n\\n----\\nReferences\\n\\n - [<sup>[1]</sup> Foote, Yoder: \\"Big Ball of Mud\\"; University of Illinois, 1999](http://www.laputan.org/mud/mud.html#SweepingItUnderTheRug) <a name=\\"bbompaper\\"></a>\\n - [Eberhard Wolff: \\"Software-Architektur im Stream, Folge 159: Big Ball of Mud\\"](https://software-architektur.tv/2023/03/31/folge159.html)"},{"id":"/2023/03/20/horde-mail-ignores-bcc","metadata":{"permalink":"/blog/2023/03/20/horde-mail-ignores-bcc","editUrl":"https://github.com/thorstensuckow/thorsten.suckow-homberg.de/tree/main/blog/2023-03-20-horde-mail-ignores-bcc/index.md","source":"@site/blog/2023-03-20-horde-mail-ignores-bcc/index.md","title":"bcc-header issues with Horde_Mime_Mail","description":"bcc-header issues with HordeMimeMail","date":"2023-03-20T00:00:00.000Z","formattedDate":"March 20, 2023","tags":[{"label":"php","permalink":"/blog/tags/php"},{"label":"horde","permalink":"/blog/tags/horde"},{"label":"bug","permalink":"/blog/tags/bug"}],"readingTime":2.69,"hasTruncateMarker":false,"authors":[{"name":"Thorsten Suckow-Homberg","url":"https://thorsten.suckow-homberg.de","imageURL":"https://avatars.githubusercontent.com/u/823135","key":"thorstensuckow"}],"frontMatter":{"title":"bcc-header issues with Horde_Mime_Mail","authors":["thorstensuckow"],"tags":["php","horde","bug"],"enableComments":true},"prevItem":{"title":"Does a big ball of mud decay?","permalink":"/blog/2023/04/14/big-ball-of-mud-decay/index_en"},"nextItem":{"title":"Fix: Missing favicon.ico in Sencha ExtJS production builds","permalink":"/blog/2023/02/19/fix-missing-favicon-in-extjs"}},"content":"## `bcc`-header issues with `Horde_Mime_Mail`\\n\\nThis issue caused some uncertainty since I was not sure if the headers were broken due to missing quotes. \\nSee https://github.com/conjoon/php-lib-conjoon/issues/17.\\n\\nTurns out that the way I assembled an email from a full text and converting it back to an instance of `Horde_Mime_Mail`\\ndoes not consider the type of the internal representation of the `bcc`-field properly. It\'s related to\\n`Horde_Mail_Rfc822_List::_normalize` and how values passed from `Horde_Mime_Mail::send()` are processed by it.\\n\\nHere\'s a code snippet that shows how I use a full text message as input, then converting it back to an instance of `Horde_Mime_Mail`\\nwith headers processed by `Horde_Mime_Headers::parseHeaders()`. \\nThe original message has a `bcc` header-field:\\n\\n(Original code [can be found here](https://github.com/conjoon/php-lib-conjoon/blob/ec170f351c0ff8dbdc390c8712dc24c47745abf6/src/Horde/Mail/Client/Imap/HordeClient.php#L648)).\\n\\n```php title=\\"HordeClient.php\\"\\n         $target = $item->getFullMsg(false);\\n         // ... \\n         $headers = Horde_Mime_Headers::parseHeaders($target);\\n\\n         $mail = new Horde_Mime_Mail($headers);\\n         $part = Horde_Mime_Part::parseMessage($target);\\n         $mail->setBasePart($part);\\n\\n         $mailer = $this->getMailer($account);\\n         $mail->send($mailer);   \\n```\\n\\n`Horde_Mime_Mail` temporarily removes the `bcc` header and stores it in a property named `_bcc`, then uses this value to add \\nit to the recipients\' addresses later on in `send()`. This is so the `bcc`-header is not appearing in the source of the message \\nthe recipients receive (see [https://www.ietf.org/rfc/rfc2822.txt](https://www.ietf.org/rfc/rfc2822.txt), Section **3.6.3** and **5**):\\n\\n> _\\"The \\"Bcc:\\" field (where the \\"Bcc\\" means \\"Blind Carbon Copy\\") contains\\naddresses of recipients of the message whose addresses are not to be\\nrevealed to other recipients of the message.\\"_ [https://www.ietf.org/rfc/rfc2822.txt, Section **3.6.3**](https://www.ietf.org/rfc/rfc2822.txt)\\n\\nThis is a part of [`Horde_mime_Mail::send()`](https://github.com/horde/Mime/blob/d9c11439bd82b7887b03271d595b998123b9fa0a/lib/Horde/Mime/Mail.php#L463):\\n\\n```php title=\\"Horde/Mime/Mail.php\\"\\n\\n        /* Build recipients. */\\n        $recipients = clone $this->_recipients;\\n        foreach (array(\'to\', \'cc\') as $header) {\\n            if ($h = $this->_headers[$header]) {\\n                $recipients->add($h->getAddressList());\\n            }\\n        }\\n        if ($this->_bcc) {\\n            $recipients->add($this->_bcc);\\n        }\\n```\\n\\nThe source above shows that for `to` / `cc` the method `getAddressList()` is being called, while the value of `_bcc` gets \\npassed to the `add()` method.  However, `_bcc` holds in this case an instance of `Horde_Mime_Headers_Addresses`, \\nwhich `Horde_Mail_Rfc822_List::_normalize()` does not consider. The value is ultimately ignored, Emails are not being \\nsent to the addresses mentioned in the `bcc` header.\\n\\nHere\'s the implementation of [`normalize()`](https://github.com/horde/Mail/blob/5458e457a2b6c333a7aed8cd2d720e83aae2f381/lib/Horde/Mail/Rfc822/List.php#L302):\\n\\n```php  title=\\"Horde/Mail/Rfc822/List.php\\"\\n\\n    protected function _normalize($obs)\\n    {\\n        $add = array();\\n\\n        if (!($obs instanceof Horde_Mail_Rfc822_List) &&\\n            !is_array($obs)) {\\n            $obs = array($obs);\\n        }\\n\\n        foreach ($obs as $val) {\\n            if (is_string($val)) {\\n                $rfc822 = new Horde_Mail_Rfc822();\\n                $val = $rfc822->parseAddressList($val);\\n            }\\n\\n            if ($val instanceof Horde_Mail_Rfc822_List) {\\n                $val->setIteratorFilter(self::BASE_ELEMENTS);\\n                foreach ($val as $val2) {\\n                    $add[] = $val2;\\n                }\\n            } elseif ($val instanceof Horde_Mail_Rfc822_Object) {\\n                $add[] = $val;\\n            }\\n        }\\n\\n        return $add;\\n    }\\n\\n```\\n\\nA possible fix is to call `getAddressList()` on `_bcc` in `Horde_Mime_Mail::send()` or check for this type in the \\n`normalize()`-method of `Horde_Mail_Rfc822_List`:\\n\\n```diff  title=\\"Horde/Mail/Rfc822/List.php.diff\\"\\n\\n    protected function _normalize($obs)\\n    {\\n        $add = array();\\n\\n\\n+       if ($obs instanceof Horde_Mime_Headers_Addresses) {\\n+           $obs = $obs->getAddressList();\\n+       }\\n     \\n        if (!($obs instanceof Horde_Mail_Rfc822_List) &&\\n            !is_array($obs)) {\\n            $obs = array($obs);\\n        }\\n```\\n\\nFixing this in `Horde/Mime/Mail.php` is also possible, although I do not know if that would cause any side effect since I \\ncould not find the expected type of `_bcc`. It gets checked in \'_normalize()\' (see above) so I guess this would be the\\nbetter place to apply the fix, instead of doing this:\\n\\n```diff title=\\"Horde/Mime/Mail.php.diff\\"\\n\\n        /* Build recipients. */\\n        $recipients = clone $this->_recipients;\\n        foreach (array(\'to\', \'cc\') as $header) {\\n            if ($h = $this->_headers[$header]) {\\n                $recipients->add($h->getAddressList());\\n            }\\n        }\\n        if ($this->_bcc) {\\n-            $recipients->add($this->_bcc);\\n+            $recipients->add($this->_bcc->getAddressList()); \\n        }\\n```\\n\\n--------\\nUpdate 21.03.2023: PR available [here](https://github.com/maintaina-com/Mail/pull/3)"},{"id":"/2023/02/19/fix-missing-favicon-in-extjs","metadata":{"permalink":"/blog/2023/02/19/fix-missing-favicon-in-extjs","editUrl":"https://github.com/thorstensuckow/thorsten.suckow-homberg.de/tree/main/blog/2023-02-19-fix-missing-favicon-in-extjs/index.md","source":"@site/blog/2023-02-19-fix-missing-favicon-in-extjs/index.md","title":"Fix: Missing favicon.ico in Sencha ExtJS production builds","description":"Fix: Missing favicon.ico in Sencha ExtJS production builds","date":"2023-02-19T00:00:00.000Z","formattedDate":"February 19, 2023","tags":[{"label":"javascript","permalink":"/blog/tags/javascript"},{"label":"sencha","permalink":"/blog/tags/sencha"},{"label":"extjs","permalink":"/blog/tags/extjs"}],"readingTime":2.045,"hasTruncateMarker":false,"authors":[{"name":"Thorsten Suckow-Homberg","url":"https://thorsten.suckow-homberg.de","imageURL":"https://avatars.githubusercontent.com/u/823135","key":"thorstensuckow"}],"frontMatter":{"title":"Fix: Missing favicon.ico in Sencha ExtJS production builds","authors":["thorstensuckow"],"tags":["javascript","sencha","extjs"],"enableComments":true},"prevItem":{"title":"bcc-header issues with Horde_Mime_Mail","permalink":"/blog/2023/03/20/horde-mail-ignores-bcc"},"nextItem":{"title":"Releasing conjoon V1.0","permalink":"/blog/Releasing-conjoon-V1.0"}},"content":"## Fix: Missing favicon.ico in Sencha ExtJS production builds\\n\\nFixing missing favicon.ico in Ext JS applications.\\n\\n*The original issue is tracked here: [https://github.com/conjoon/conjoon/issues/24](https://github.com/conjoon/conjoon/issues/24)*\\n\\n### The issue\\n\\nI\u2019m not quite sure *when *and *why *it broke, but it looks like production builds of Sencha Ext JS applications do not contain any **favicon.ico** originally existing in the development build (*anymore*).\\n\\nWhile everything seems to be okay with development builds (that\u2019s easy, they refer to the development\u2019s root folder in most cases and do not copy and move files around like the production build does), deploying to production will show the default icon coming with your vendor\u2019s browser for any Sencha ExtJS application, at least when your environment is using the following package versions:\\n\\n```\\n    webpack v4.39.3n/a\\n    ext-webpack-plugin v7.6.0 \\n    Ext JS v7.6.0.41 \\n    Sencha Cmd v7.6.0.87\\n``\\n\\nA call to\\n\\n```bash\\n    $ cross-env webpack \\n          --env.profile=desktop \\n          --env.environment=production \\n          --env.treeshake=yes \\n          --env.cmdopts=--uses\\n```\\n\\nwill produce the production build, but the production build will not contain the favicon.ico. Here\u2019s proof (\u2026 sort of):\\n\\n![](https://cdn-images-1.medium.com/max/2000/1*XGxSX1p43oVtk3cif5mE2Q.png)\\n\\n### The fix\\n\\nI did not invest too much investigating the reason why this file is omitted. Instead, I added the copy-webpack-plugin to the project and made sure the the favicon is copied over when running npm run build.\\n\\nIf you\u2019re reading this post, you most likely stumbled across the same issue. Here\u2019s how to fix it.\\n\\n1. Add copy-webpack-plugin to your project\\n\\nI\u2019m still sporting **webpack v4.39.3 **so I had to fall back to an older version of the plugin. I\u2019m using **copy-webpack-plugin@6.4.1** in this case:\\n\\n```bash\\n    $ npm i -D copy-webpack-plugin@6.4.1\\n```\\n\\n2. Add a few more modules to your project\u2019s webpack.config.js\\n\\nAdd the following two lines to the head of the file:\\n\\n```javascript\\n    // ....\\n    const CopyWebpackPlugin = require(\\"copy-webpack-plugin\\");\\n    const fs = require(\\"fs\\");\\n    //...\\n```\\n\\nWhy fs? I couldn\u2019t find an easy way to access the application\u2019s name at this point of the build step through the variables available, so I\u2019m using fs to parse the project\'s app.json. The value of its name-property is then used for computing the destination folder for the *copy*-operation.\\n\\n3. Add the **copy-webpack-plugin** to the list of plugins in the script\\n\\nYou\u2019ll easily find the location that has to be edited when looking for the **@sencha/ext-webpack-plugin**-configuration:\\n\\n```javascript\\n    const plugins = [\\n      new ExtWebpackPlugin({\\n        // ...\\n      }),\\n      new CopyWebpackPlugin({\\n        patterns: [{\\n          from: path.resolve(__dirname, \'./favicon.ico\'),\\n          to: path.join(\\n              __dirname,\\n              \\"build\\",\\n              environment,\\n              JSON.parse(\\n                fs.readFileSync(\\n                  path.resolve(__dirname, \'./app.json\')\\n                )\\n              ).name\\n          )\\n        }]\\n      })\\n    ]\\n```\\n\\nSubsequent builds will now contain the **favicon.ico**."},{"id":"Releasing-conjoon-V1.0","metadata":{"permalink":"/blog/Releasing-conjoon-V1.0","editUrl":"https://github.com/thorstensuckow/thorsten.suckow-homberg.de/tree/main/blog/2022-11-16-releasing-conjoon-v1.0/index.md","source":"@site/blog/2022-11-16-releasing-conjoon-v1.0/index.md","title":"Releasing conjoon V1.0","description":"Releasing conjoon V1.0","date":"2022-11-16T00:00:00.000Z","formattedDate":"November 16, 2022","tags":[{"label":"release","permalink":"/blog/tags/release"},{"label":"conjoon","permalink":"/blog/tags/conjoon"},{"label":"open source","permalink":"/blog/tags/open-source"},{"label":"email","permalink":"/blog/tags/email"}],"readingTime":1.125,"hasTruncateMarker":false,"authors":[{"name":"Thorsten Suckow-Homberg","url":"https://thorsten.suckow-homberg.de","imageURL":"https://avatars.githubusercontent.com/u/823135","key":"thorstensuckow"}],"frontMatter":{"slug":"Releasing-conjoon-V1.0","title":"Releasing conjoon V1.0","authors":["thorstensuckow"],"tags":["release","conjoon","open source","email"],"enableComments":true},"prevItem":{"title":"Fix: Missing favicon.ico in Sencha ExtJS production builds","permalink":"/blog/2023/02/19/fix-missing-favicon-in-extjs"},"nextItem":{"title":"Easily create Siesta tests for your applications","permalink":"/blog/2022/07/15/easily-create-siesta-tests-for-your-application"}},"content":"## Releasing conjoon V1.0\\n\\nI\u2019m happy to announce conjoon 1.0, the very first major release of the Open Source JavaScript Email client.\\n\\nFor updating to the latest version, simply use our [installer](https://www.conjoon.org/blog/2022/11/14/docs/api/misc/@conjoon/create-conjoon). It will let you select the latest release when opting for the version to install.\\n\\n![](https://cdn-images-1.medium.com/max/3126/0*0A2MPF6zRkH3ks2E.png)\\n\\n## Highlights[\u200b](https://www.conjoon.org/blog/2022/11/14/1.0.0-release#highlights)\\n\\nv1.0.0 marks the first major release for our JavaScript Email frontend, over 100 tickets related to [bugfixes, optimizations and minor features](https://github.com/orgs/conjoon/projects/3) across all projects where closed.\\n\\nThis release focuses on providing a stable frontend in conjunction with [lumen-app-email](https://www.conjoon.org/docs/api/backends/@conjoon/lumen-app-email).\\n\\nBesides the features already introduced with the release candidates, the following features have been added:\\n\\n### Plugins[\u200b](https://www.conjoon.org/blog/2022/11/14/1.0.0-release#plugins)\\n\\n* Plugin [mail-internal-mailtohandler](https://www.conjoon.org/docs/api/plugins/@conjoon/extjs-app-webmail/mail-internal-mailtohandler): Plugin for registering conjoon as the protocol handler for mailto-links\\n\\n![](https://cdn-images-1.medium.com/max/2004/0*iehzFekzIAWO5vfh.png)\\n\\n### Installer and CLI actions for lumen-app-email[\u200b](https://www.conjoon.org/blog/2022/11/14/1.0.0-release#installer-and-cli-actions-for-lumen-app-email)\\n\\nThe installation for lumen-app-email has been simplified with the help of Artisan and CLI commands. To get an instance of lumen-app-email running, use\\n\\n    $ composer create-project conjoon/lumen-app-email {targetDir} {version}\\n\\nwhich will start the installation process. For more information, refer to the [official guide](https://www.conjoon.org/docs/api/backends/@conjoon/lumen-app-email#installation-1).\\n\\n![](https://cdn-images-1.medium.com/max/3218/0*X1lMoQ8gvmbMwhAF.png)\\n\\n### Docker Container[\u200b](https://www.conjoon.org/blog/2022/11/14/1.0.0-release#docker-container)\\n\\n[ddev-ms-email](https://www.conjoon.org/docs/api/backends/@conjoon/ddev-ms-email) has been updated to utilize the installer of lumen-app-email and additionally provides integration options for conjoon so that the container can be used for serving both the backend and the frontend.\\n\\n    $ ddev create-conjoon\\n\\nwill start the installation of conjoon. For more information, refer to the [official guide](https://www.conjoon.org/docs/api/backends/@conjoon/ddev-ms-email).\\n\\nHappy coding! \ud83c\udf88"},{"id":"/2022/07/15/easily-create-siesta-tests-for-your-application","metadata":{"permalink":"/blog/2022/07/15/easily-create-siesta-tests-for-your-application","editUrl":"https://github.com/thorstensuckow/thorsten.suckow-homberg.de/tree/main/blog/2022-07-15-easily-create-siesta-tests-for-your-application/index.md","source":"@site/blog/2022-07-15-easily-create-siesta-tests-for-your-application/index.md","title":"Easily create Siesta tests for your applications","description":"Easily create Siesta tests for your applications","date":"2022-07-15T00:00:00.000Z","formattedDate":"July 15, 2022","tags":[{"label":"npm","permalink":"/blog/tags/npm"},{"label":"tooling","permalink":"/blog/tags/tooling"},{"label":"javascript","permalink":"/blog/tags/javascript"}],"readingTime":2.485,"hasTruncateMarker":false,"authors":[{"name":"Thorsten Suckow-Homberg","url":"https://thorsten.suckow-homberg.de","imageURL":"https://avatars.githubusercontent.com/u/823135","key":"thorstensuckow"}],"frontMatter":{"title":"Easily create Siesta tests for your applications","authors":["thorstensuckow"],"tags":["npm","tooling","javascript"],"enableComments":true},"prevItem":{"title":"Releasing conjoon V1.0","permalink":"/blog/Releasing-conjoon-V1.0"},"nextItem":{"title":"JavaScript, function-as-object and the internet","permalink":"/blog/2022/06/14/javascript-function-as-object-and-the-internet"}},"content":"## Easily create Siesta tests for your applications\\n\\n[Siesta](https://www.bryntum.com/products/siesta/) is a JavaScript unit and UI testing tool originally written by [Mats Bryntse](https://bryntum.com) which allows for running tests (for **Ext JS** (view-) components, amongst others) directly in the web browser (or headless in case you want to use it with your ci tools).\\n\\nIt is [conjoon](https://conjoon.org)\u2019s favorite among the various testing tools out there (we\u2019re also working with [**Jest**\ud83c\udccf](https://jestjs.io/) when there\u2019s no **Ext JS** involved) and without it, it\u2019s clear that End-to-End tests of some of the features and changes that have made it into conjoon would have slowed the project down due to their cyclic complexity \u2014 or even worse, make the software stuck in regression.\\n\\n[extjs-app-webmail](https://www.conjoon.org/docs/api/packages/@conjoon/extjs-app-webmail) alone sports more than 5000 unit and ui tests created with Siesta and they all make sure that the frontend behaves as intended and is free from unwelcomed side effects for any edge case that might occur (we know that\u2019s a [bold statement](https://dilbert.com/strip/2017-10-02?creator=Dilbert_Daily)).\\n\\nTo ease the process of setting up a functional **Siesta** environment, we\u2019re introducing the cli tool create-siesta which can be used with any JavaScript framework that requires a functional **Siesta** application running in a web browser, or at least a fully fledged infrastructure for running Siesta tests. However, by providing integrated build options for the **Ext JS** SDK, it is best suited for environments where the **Sencha** framework is already being used or will be used.\\n\\nFor using the tool, all that is required is a working [Node.js](https://node.js/) installation on your machine. The scaffolding process can then be started by typing\\n\\n```bash\\n$ npx create-siesta@latest\\n```\\n\\non the console. create-siesta will then guide you through the installation process and also consider the environment (aka *current working directory*) it was invoked in, by falling back to already existing **Ext JS** sources for example, or any other package requirements already available.\\n\\n![](https://cdn-images-1.medium.com/max/2400/1*ZOS1V_X-mg5T0ohzpH7GKg.gif)\\n\\nOnce create-siesta is finished, a folder (defaulting to tests) will be available with your project that contains a scaffolded **Siesta** environment with templates for additional and future tests you and your team can implement. Tests can then be started with\\n\\n```bash\\n$ npm run siesta:test\\n```\\n\\ncreate-siesta builds upon an already available helper tool for creating tests with Siesta, namely [**@coon-js/siesta-lib-helper](https://github.com/coon-js/siesta-lib-helper)** which is already widely used throughout the **conjoon** project and the packages it depends on. This means that you will have an additional control at hand with the Siesta application that allows for switching between toolkit dependent tests and dynamically changing timeout values used with\\n\\n```javascript\\n    t.waitForMs()\\n```\\n\\nin tests.\\n\\n![*The additional control made available by siesta-lib-helper allows for switching between the modern M and classic C toolkit and provides a list of timeout values that can be globally used with t.waitForMs() in tests.*](https://cdn-images-1.medium.com/max/2000/1*ThrsLBT_i7hVXw7df_kmtg.png)\\n\\n## Documentation[\u200b](http://localhost:3000/blog/2022/07/15/create-siesta#documentation)\\n\\nThe documentation for create-siesta can be found [here](https://www.conjoon.org/docs/api/misc/@coon-js/create-siesta), the sources are available with the [coon.js](https://github.com/coon-js) organization at **GitHub**, which provides a collection of useful tools for rapid **Sencha Ext JS** application development, and spawned from the [conjoon open source project](https://conjoon.org)."},{"id":"/2022/06/14/javascript-function-as-object-and-the-internet","metadata":{"permalink":"/blog/2022/06/14/javascript-function-as-object-and-the-internet","editUrl":"https://github.com/thorstensuckow/thorsten.suckow-homberg.de/tree/main/blog/2022-06-14-javascript-function-as-object-and-the-internet/index.md","source":"@site/blog/2022-06-14-javascript-function-as-object-and-the-internet/index.md","title":"JavaScript, function-as-object and the internet","description":"JavaScript, function-as-object and the internet","date":"2022-06-14T00:00:00.000Z","formattedDate":"June 14, 2022","tags":[{"label":"social","permalink":"/blog/tags/social"},{"label":"internet","permalink":"/blog/tags/internet"},{"label":"javascript","permalink":"/blog/tags/javascript"}],"readingTime":0.595,"hasTruncateMarker":false,"authors":[{"name":"Thorsten Suckow-Homberg","url":"https://thorsten.suckow-homberg.de","imageURL":"https://avatars.githubusercontent.com/u/823135","key":"thorstensuckow"}],"frontMatter":{"title":"JavaScript, function-as-object and the internet","authors":["thorstensuckow"],"tags":["social","internet","javascript"],"enableComments":true},"prevItem":{"title":"Easily create Siesta tests for your applications","permalink":"/blog/2022/07/15/easily-create-siesta-tests-for-your-application"},"nextItem":{"title":"conjoon installer updates","permalink":"/blog/2022/06/08/conjoon-installer-updates"}},"content":"## JavaScript, function-as-object and the internet\\n\\nThe internet \u2122\ufe0f has caught up on an ad by [FERCHAU](https://www.linkedin.com/company/ferchau/), found \u2014 amongst others \u2014 somewhere within the depths of the Berlin subway.\\n\\n[![](./img/kitze-twitter.png)](https://twitter.com/thekitze/status/1535951647477846016)\\n\\n\\nSome devs cringe at the code used with the ad \u2014 turns out it can easily get de-mystified with JavaScript\u2019s [function-as-object](http://www.cs.uni.edu/~wallingf/patterns/envoy.pdf) style:\\n\\n[![](./img/twitter-thorstensuckow.png)](https://twitter.com/thorstensuckow/status/1536479447234248708)\\n\\n```javascript\\n    const careerStuck = () => {};\\n    careerStuck.stop = () => {};\\n```\\n\\nOpinions regarding semantics may differ:\\n\\n\\n```javascript\\n    if (careerStuck() === true) {\\n        careerStuck.stop();\\n        beSmart(); // \ud83d\udc40\\n    }\\n```\\n\\n### Further reading\\n\\nMartin Fowler on **FunctionAsObject** in an [article from 2017](https://martinfowler.com/bliki/FunctionAsObject.html). The pattern goes back to the last century when Eugene Wallingford coined the name \u201cFunction as Object\u201d in his [1999 pattern language \u201cEnvoy\u201d](http://www.cs.uni.edu/~wallingf/patterns/envoy.pdf)."},{"id":"/2022/06/08/conjoon-installer-updates","metadata":{"permalink":"/blog/2022/06/08/conjoon-installer-updates","editUrl":"https://github.com/thorstensuckow/thorsten.suckow-homberg.de/tree/main/blog/2022-06-08-conjoon-installer-updates/index.md","source":"@site/blog/2022-06-08-conjoon-installer-updates/index.md","title":"conjoon installer updates","description":"conjoon installer updates","date":"2022-06-08T00:00:00.000Z","formattedDate":"June 8, 2022","tags":[{"label":"npm","permalink":"/blog/tags/npm"},{"label":"tooling","permalink":"/blog/tags/tooling"},{"label":"javascript","permalink":"/blog/tags/javascript"},{"label":"conjoon","permalink":"/blog/tags/conjoon"}],"readingTime":1.02,"hasTruncateMarker":false,"authors":[{"name":"Thorsten Suckow-Homberg","url":"https://thorsten.suckow-homberg.de","imageURL":"https://avatars.githubusercontent.com/u/823135","key":"thorstensuckow"}],"frontMatter":{"title":"conjoon installer updates","authors":["thorstensuckow"],"tags":["npm","tooling","javascript","conjoon"],"enableComments":true},"prevItem":{"title":"JavaScript, function-as-object and the internet","permalink":"/blog/2022/06/14/javascript-function-as-object-and-the-internet"},"nextItem":{"title":"Releasing conjoon 1.0.0-beta.0","permalink":"/blog/2022/06/07/releasing-conjoon-1-0-0-beta"}},"content":"![](https://cdn-images-1.medium.com/max/2186/1*jfdWSDOHVoTAkKJmlsSYqQ.gif)\\n\\n## conjoon installer updates\\n\\nCreating a custom labeled version of [conjoon](https://conjoon.org) has never been easier.\\n\\nThe installer (i.e. [initializer](https://docs.npmjs.com/cli/v8/commands/npm-init)) for conjoon received an update to make setting up a local installation of the frontend more convenient and more intuitive.\\n\\nThe installer requires [Node.js](https://nodejs.org/) 16.14 or above and is started by typing\\n\\n```bash\\n$ npx create-conjoon@latest\\n```\\n\\non the command line. Additionally, you have the option to initiate the [quick install](https://www.conjoon.org/assets/files/create-conjoon-ceb95c48fd2585e918c38d15f61bebca.md#install-type) right away by providing the name and the target directory for the installation:\\n\\n```bash\\n$ npx create-conjoon@latest \\"my webmail\\" ~/webmail\\n```\\n\\nThe *quick install* will continue the installation process by picking **the latest release** from the package registry (**including **pre-releases) and configure the installation with fake endpoints returning demo data. You can still connect to production systems later on by using appropriate settings.\\n\\n>  _If you prefer a guided installation for configuring endpoints for existing [backends](https://www.conjoon.org/assets/files/overview-8db4359943e06906e553f7195535e9dd.md) right away, you can omit any of the arguments. The installer will then present various options to make sure your requirements are met!_\\n\\nIn both cases, target directory will contain the files required for developing conjoon and a production build available in the build folder, which is served by typing npm run stage in the target directory."},{"id":"/2022/06/07/releasing-conjoon-1-0-0-beta","metadata":{"permalink":"/blog/2022/06/07/releasing-conjoon-1-0-0-beta","editUrl":"https://github.com/thorstensuckow/thorsten.suckow-homberg.de/tree/main/blog/2022-06-07-releasing-conjoon-1-0-0-beta/index.md","source":"@site/blog/2022-06-07-releasing-conjoon-1-0-0-beta/index.md","title":"Releasing conjoon 1.0.0-beta.0","description":"Releasing conjoon 1.0.0-beta.0","date":"2022-06-07T00:00:00.000Z","formattedDate":"June 7, 2022","tags":[{"label":"release","permalink":"/blog/tags/release"},{"label":"conjoon","permalink":"/blog/tags/conjoon"},{"label":"open source","permalink":"/blog/tags/open-source"},{"label":"email","permalink":"/blog/tags/email"}],"readingTime":0.635,"hasTruncateMarker":false,"authors":[{"name":"Thorsten Suckow-Homberg","url":"https://thorsten.suckow-homberg.de","imageURL":"https://avatars.githubusercontent.com/u/823135","key":"thorstensuckow"}],"frontMatter":{"title":"Releasing conjoon 1.0.0-beta.0","authors":["thorstensuckow"],"tags":["release","conjoon","open source","email"],"enableComments":true},"prevItem":{"title":"conjoon installer updates","permalink":"/blog/2022/06/08/conjoon-installer-updates"},"nextItem":{"title":"Fix: Ext JS Simlets and omitting the status code","permalink":"/blog/2022/04/15/extjs-simlets-and-omitting-the-status-code"}},"content":"![](https://cdn-images-1.medium.com/max/2736/0*HWdUhNVaz3OI-bRw.png)\\n\\n## Releasing conjoon 1.0.0-beta.0\\n\\n\ud83c\udf89 5 years after the (almost) [first commit](https://github.com/conjoon/conjoon/commit/ca075e548a644011e0d9fbaa3321bcff7aa8f998) to conjoon\u2019s [new home](https://github.com/conjoon/conjoon), I\u2019m happy to announce the immediate availability of the first public pre-release of [**conjoon](https://conjoon.org)**, an open source email client built with JavaScript, PHP and great tools from the open source community.\\n\\nTo install the latest release on your local machine, type\\n\\n```bash\\n$ npx create-conjoon@latest\\n```\\n\\nthen follow the instructions on screen.\\n\\nDon\u2019t miss out on the [documentation](https://www.conjoon.org/docs) for more information about available install and build types.\\n\\nWhile I\u2019m confident that conjoon can take its first steps in a production environment, expect a stable first release to be available in the coming days. Until then, a few additions to the documentation and the [guides](https://www.conjoon.org/docs/category/guides) will be made.\\n\\nHappy coding! \ud83c\udf88"},{"id":"/2022/04/15/extjs-simlets-and-omitting-the-status-code","metadata":{"permalink":"/blog/2022/04/15/extjs-simlets-and-omitting-the-status-code","editUrl":"https://github.com/thorstensuckow/thorsten.suckow-homberg.de/tree/main/blog/2022-04-15-extjs-simlets-and-omitting-the-status-code/index.md","source":"@site/blog/2022-04-15-extjs-simlets-and-omitting-the-status-code/index.md","title":"Fix: Ext JS Simlets and omitting the status code","description":"Fix: Ext JS Simlets and omitting the status code","date":"2022-04-15T00:00:00.000Z","formattedDate":"April 15, 2022","tags":[{"label":"javascript","permalink":"/blog/tags/javascript"},{"label":"sencha","permalink":"/blog/tags/sencha"},{"label":"extjs","permalink":"/blog/tags/extjs"}],"readingTime":2.505,"hasTruncateMarker":false,"authors":[{"name":"Thorsten Suckow-Homberg","url":"https://thorsten.suckow-homberg.de","imageURL":"https://avatars.githubusercontent.com/u/823135","key":"thorstensuckow"}],"frontMatter":{"title":"Fix: Ext JS Simlets and omitting the status code","authors":["thorstensuckow"],"tags":["javascript","sencha","extjs"],"enableComments":true},"prevItem":{"title":"Releasing conjoon 1.0.0-beta.0","permalink":"/blog/2022/06/07/releasing-conjoon-1-0-0-beta"}},"content":"## Fix: Ext JS Simlets and omitting the status code\\n\\nI recently stumbled upon a mean error that was hard to track down. Luckily, the issue was caused by a simple carelessness regarding fully configured response-objects of Simlets used in the dev-environment of the conjoon-project and did not require any large refactoring.\\n\\n*The original issue is tracked here: [https://github.com/conjoon/extjs-app-webmail/issues/196](https://github.com/conjoon/extjs-app-webmail/issues/196)*\\n\\n### The issue\\n\\nThe problem was related to batch-operations in Ext JS: When any operation of the batch fails, the pauseonexception-setting is considered and further processing of any remaining operation is halted. The user then has the option to retry the last failed operation, continuing with the remaining operations if this was finally successful.\\nHowever, retrying some of the failed operations gave the following error:\\n\\n![](https://cdn-images-1.medium.com/max/2000/0*_Lq8JlNRBBEutuGY.png)\\n\\nThe operation that failed \u2014 and which is now about to be retried \u2014 was already destroyed by Ext JS internal garbage-collector.\\n\\n### The fix\\n\\nIt took some time to find out that the operation was destroyed and that some of the properties required for re-running it were already de-referenced. This took me to the internals of response-handling of XMLHttpRequests of Ext JS and finally to the code where the HTTP status of a request was inspected. Take note that I\u2019m mainly developing with Simlets to avoid costly network roundtrips to any backend.\\n\\n> _It is mandatory for the Simlets to properly treat mocked backend-errors by also providing the appropriate status-code._\\n\\nIt was assumed that simply setting the success-property in any of the delete/put/...-methods of a simlet treating the request would later on be parsed internally; setting the status-code of the response automatically to anything other than 200. That is not the case. It is mandatory for the Simlets to properly treat mocked backend-errors by also providing the appropriate status-code.\\n\\nThe flaw was too often overseen since the status-field was **not set,** as the following code examples show (examples represent code in any of the delete/post/put/...-methods of a Json-Simlet; see Ext.ux.ajax.Simlet):\\n\\nThe following leaves the ret.status-property undefined:\\n\\n```javascript\\n    //....\\n    const ret = {};\\n    ret.responseText = Ext.JSON.encode({\\n        success: false\\n    });\\n    return ret;\\n```\\n\\n\u2026 while the following re-uses the predefined value of 200 for the status, even if success=false should indicate that the request could not be processed as expected:\\n\\n```javascript\\n    const \\n        me = this,\\n        ret = {};\\n\\n    Ext.Array.forEach(me.responseProps, function (prop) {\\n        if (prop in me) {\\n            ret[prop] = me[prop];\\n        }\\n    });\\n\\n    ret.responseText = Ext.JSON.encode({\\n        success: false\\n    });\\n\\n    return ret;\\n```\\n\\nIn both cases, Ext.data.request.Ajax would parse the response and its status in the onComplete-method:\\n\\n```javascript\\n    result = Ext.data.request.Ajax.parseStatus(xhr.status, xhr);\\n```\\n\\nAn undefined status would cause the response to be treated as **not successful** (example 1), while anything other than undefined would be parsed and interpreted according to its HTTP-status representative (successful: 200; failure: 404, 500 etc.).\\n\\nExtJS would assume that a successful operation is not needed anymore; it is automatically destroyed then. This was unexpected behavior in this case, since the code marked the operation as a failure, but not via the status-code, which was required."}]}')}}]);