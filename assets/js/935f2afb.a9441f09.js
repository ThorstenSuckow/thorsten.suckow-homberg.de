"use strict";(self.webpackChunkthorsten_suckow_homberg_de=self.webpackChunkthorsten_suckow_homberg_de||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"category","label":"Articles","items":[{"type":"category","label":"The Payroll System","items":[{"type":"link","label":"Use Case 1 - Adding a new employee","href":"/docs/articles/agp-the-payroll-system/Use-Case-1-Adding-a-new-employee","docId":"articles/agp-the-payroll-system/use-case-1-adding-a-new-employee"}],"collapsed":false,"collapsible":true,"href":"/docs/articles/agp-the-payroll-system/introduction"},{"type":"link","label":"Dependency Injection in JavaScript","href":"/docs/articles/dependency-injection-in-javascript/","docId":"articles/dependency-injection-in-javascript/index"},{"type":"link","label":"Ext JS - Beyond ES5","href":"/docs/articles/sencha-extjs-beyond-es5/","docId":"articles/sencha-extjs-beyond-es5/index"},{"type":"link","label":"Using PHP enums as method calls","href":"/docs/articles/using-php-enums-as-method-calls/","docId":"articles/using-php-enums-as-method-calls/index"},{"type":"link","label":"Downloadable Assets with GitHub Actions","href":"/docs/articles/downloadable-assets-with-github-actions/","docId":"articles/downloadable-assets-with-github-actions/index"},{"type":"category","label":"Creating ExtJS applications with coon.js","items":[{"type":"link","label":"Part 1: Introduction","href":"/docs/articles/creating-extjs-applications-with-coon-js/introduction","docId":"articles/creating-extjs-applications-with-coon-js/introduction"},{"type":"link","label":"Part 2: Packages and Configuration Options","href":"/docs/articles/creating-extjs-applications-with-coon-js/packages-and-configuration-options","docId":"articles/creating-extjs-applications-with-coon-js/packages-and-configuration-options"},{"type":"link","label":"Part 3: Configuration Details and defining Plugins","href":"/docs/articles/creating-extjs-applications-with-coon-js/configuration-details-and-plugins","docId":"articles/creating-extjs-applications-with-coon-js/configuration-details-and-plugins"},{"type":"link","label":"Part 4: Registering services and using the Service Locator","href":"/docs/articles/creating-extjs-applications-with-coon-js/registering-services-and-using-the-service-locator","docId":"articles/creating-extjs-applications-with-coon-js/registering-services-and-using-the-service-locator"}],"collapsed":false,"collapsible":true,"href":"/docs/articles/creating-extjs-applications-with-coon-js/"},{"type":"link","label":"JavaScript Promises \u2014 Return Values and Error Handlers","href":"/docs/articles/javascript-promises-return-values-and-error-handlers/","docId":"articles/javascript-promises-return-values-and-error-handlers/index"},{"type":"link","label":"Fluent Interface for JavaScript Promises","href":"/docs/articles/a-fluent-interface-for-javascript-promises/","docId":"articles/a-fluent-interface-for-javascript-promises/index"}],"collapsed":true,"collapsible":true,"href":"/docs/articles/"}],"toolbox":[{"type":"category","label":"Catalogue","items":[{"type":"link","label":"Actor","href":"/docs/Glossary/uml.actor","docId":"Glossary/uml.actor"},{"type":"link","label":"BoundedContext","href":"/docs/Glossary/ddd.boundedcontext","docId":"Glossary/ddd.boundedcontext"},{"type":"link","label":"Core Domain","href":"/docs/Glossary/ddd.coredomain","docId":"Glossary/ddd.coredomain"},{"type":"link","label":"Dependency Injection","href":"/docs/Glossary/softwaredesign.dependencyinjection","docId":"Glossary/softwaredesign.dependencyinjection"},{"type":"link","label":"Dependency Inversion Principle","href":"/docs/Glossary/softwaredesign.dependencyinversionprinciple","docId":"Glossary/softwaredesign.dependencyinversionprinciple"},{"type":"link","label":"Domain","href":"/docs/Glossary/softwaredesign.domain","docId":"Glossary/softwaredesign.domain"},{"type":"link","label":"Domain Driven Design","href":"/docs/Glossary/ddd.domaindrivendesign","docId":"Glossary/ddd.domaindrivendesign"},{"type":"link","label":"Entity","href":"/docs/Glossary/softwaredesign.entity","docId":"Glossary/softwaredesign.entity"},{"type":"link","label":"Facade","href":"/docs/Glossary/softwaredesign.facade","docId":"Glossary/softwaredesign.facade"},{"type":"link","label":"Liskov Substitution Principle","href":"/docs/Glossary/softwaredesign.liskovsubstitutionprinciple","docId":"Glossary/softwaredesign.liskovsubstitutionprinciple"},{"type":"link","label":"Repository","href":"/docs/Glossary/softwaredesign.repository","docId":"Glossary/softwaredesign.repository"},{"type":"link","label":"Separation of Concerns","href":"/docs/Glossary/softwaredesign.separationofconcerns","docId":"Glossary/softwaredesign.separationofconcerns"},{"type":"link","label":"Software Craftsmanship","href":"/docs/Glossary/development.softwarecraftsmanship","docId":"Glossary/development.softwarecraftsmanship"},{"type":"link","label":"Ubiquitous Language","href":"/docs/Glossary/ddd.ubiquitouslanguage","docId":"Glossary/ddd.ubiquitouslanguage"},{"type":"link","label":"Use Case","href":"/docs/Glossary/uml.usecase","docId":"Glossary/uml.usecase"}],"collapsible":true,"collapsed":false,"href":"/docs/"},{"type":"link","label":"Bibliography","href":"/docs/bibliography","docId":"bibliography"}]},"docs":{"articles/a-fluent-interface-for-javascript-promises/index":{"id":"articles/a-fluent-interface-for-javascript-promises/index","title":"Fluent Interface for JavaScript Promises","description":"Use JavaScript Proxies to create fluent interfaces for Promises","sidebar":"docs"},"articles/agp-the-payroll-system/index":{"id":"articles/agp-the-payroll-system/index","title":"Introduction","description":"Agile Software Development Workshop","sidebar":"docs"},"articles/agp-the-payroll-system/use-case-1-adding-a-new-employee":{"id":"articles/agp-the-payroll-system/use-case-1-adding-a-new-employee","title":"Use Case 1 - Adding a new employee","description":"A new employee is added by the receipt of an AddEmp transaction. This transaction contains the employee\'s name, addess, and assigned employee number. The transaction has the following three forms:","sidebar":"docs"},"articles/contracts-for-events/introduction":{"id":"articles/contracts-for-events/introduction","title":"introduction","description":""},"articles/creating-extjs-applications-with-coon-js/configuration-details-and-plugins":{"id":"articles/creating-extjs-applications-with-coon-js/configuration-details-and-plugins","title":"Part 3: Configuration Details and defining Plugins","description":"Managing and configuring Plugins","sidebar":"docs"},"articles/creating-extjs-applications-with-coon-js/index":{"id":"articles/creating-extjs-applications-with-coon-js/index","title":"Creating Ext JS Applications with coon.js","description":"Ext JS Application Development with npm and pluggable Packages","sidebar":"docs"},"articles/creating-extjs-applications-with-coon-js/introduction":{"id":"articles/creating-extjs-applications-with-coon-js/introduction","title":"Part 1: Introduction","description":"An introduction to the coon.js-Framework","sidebar":"docs"},"articles/creating-extjs-applications-with-coon-js/packages-and-configuration-options":{"id":"articles/creating-extjs-applications-with-coon-js/packages-and-configuration-options","title":"Part 2: Packages and Configuration Options","description":"Managing and loading packages","sidebar":"docs"},"articles/creating-extjs-applications-with-coon-js/registering-services-and-using-the-service-locator":{"id":"articles/creating-extjs-applications-with-coon-js/registering-services-and-using-the-service-locator","title":"Part 4: Registering services and using the Service Locator","description":"Defining Services for Ext JS Applications","sidebar":"docs"},"articles/dependency-injection-in-javascript/index":{"id":"articles/dependency-injection-in-javascript/index","title":"Dependency Injection in JavaScript","description":"Implementing Constructor Injection with the help of JavaScript Proxies.","sidebar":"docs"},"articles/downloadable-assets-with-github-actions/index":{"id":"articles/downloadable-assets-with-github-actions/index","title":"Downloadable Assets with GitHub Actions","description":"Pack and publish your releases with GitHub Actions","sidebar":"docs"},"articles/index":{"id":"articles/index","title":"Articles","description":"This is the more formal section of my site: A collection of articles about software development I have written over the","sidebar":"docs"},"articles/javascript-promises-return-values-and-error-handlers/index":{"id":"articles/javascript-promises-return-values-and-error-handlers/index","title":"JavaScript Promises \u2014 Return Values and Error Handlers","description":"Handling Errors and return values with JavaScript Promises","sidebar":"docs"},"articles/sencha-extjs-beyond-es5/index":{"id":"articles/sencha-extjs-beyond-es5/index","title":"Ext JS - Beyond ES5","description":"Use latest ECMA Script versions with Sencha Ext JS","sidebar":"docs"},"articles/using-php-enums-as-method-calls/index":{"id":"articles/using-php-enums-as-method-calls/index","title":"Using PHP enums as method calls","description":"Dynamically mapping method calls to existing typed values.","sidebar":"docs"},"bibliography":{"id":"bibliography","title":"Bibliography","description":"Brooks, Frederic P., Jr.","sidebar":"toolbox"},"Glossary/ddd.boundedcontext":{"id":"Glossary/ddd.boundedcontext","title":"BoundedContext","description":"A Bounded Context  is a part of a software system that contains the semantics of a","sidebar":"toolbox"},"Glossary/ddd.coredomain":{"id":"Glossary/ddd.coredomain","title":"Core Domain","description":"In a software system, a Core Domain is the part of the software that holds all functionality innate to the","sidebar":"toolbox"},"Glossary/ddd.domaindrivendesign":{"id":"Glossary/ddd.domaindrivendesign","title":"Domain Driven Design","description":"Domain Driven Design [DDD] is a software development methodology that focuses on","sidebar":"toolbox"},"Glossary/ddd.ubiquitouslanguage":{"id":"Glossary/ddd.ubiquitouslanguage","title":"Ubiquitous Language","description":"A Ubiquitous Language is a vocabulary established by (software development) teams that provides semantic contexts","sidebar":"toolbox"},"Glossary/development.softwarecraftsmanship":{"id":"Glossary/development.softwarecraftsmanship","title":"Software Craftsmanship","description":"An idea that reflects on the role and meaning of software development as craftsmanship.","sidebar":"toolbox"},"Glossary/softwaredesign.dependencyinjection":{"id":"Glossary/softwaredesign.dependencyinjection","title":"Dependency Injection","description":"Dependency Injection (DI) is a design pattern that helps with decoupling dependencies.","sidebar":"toolbox"},"Glossary/softwaredesign.dependencyinversionprinciple":{"id":"Glossary/softwaredesign.dependencyinversionprinciple","title":"Dependency Inversion Principle","description":"The Dependency Inversion Principle (DIP) is a principle in Agile Software Development that helps with","sidebar":"toolbox"},"Glossary/softwaredesign.domain":{"id":"Glossary/softwaredesign.domain","title":"Domain","description":"The term Domain in Software Design stands for a business which processes are implemented in a software system","sidebar":"toolbox"},"Glossary/softwaredesign.entity":{"id":"Glossary/softwaredesign.entity","title":"Entity","description":"An Entity is a specification of a uniquely identifiable (abstract) object and its properties and behavior in a","sidebar":"toolbox"},"Glossary/softwaredesign.facade":{"id":"Glossary/softwaredesign.facade","title":"Facade","description":"A Facade is an object based Structural Pattern .","sidebar":"toolbox"},"Glossary/softwaredesign.liskovsubstitutionprinciple":{"id":"Glossary/softwaredesign.liskovsubstitutionprinciple","title":"Liskov Substitution Principle","description":"The Liskov Substitution Principle (LSP) governs design rules for object oriented languages and states that \\"subtypes must be substitutable for their base types.\\" :","sidebar":"toolbox"},"Glossary/softwaredesign.repository":{"id":"Glossary/softwaredesign.repository","title":"Repository","description":"A Repository provides an interface for persisting and retrieving data, while hiding the implementation details of","sidebar":"toolbox"},"Glossary/softwaredesign.separationofconcerns":{"id":"Glossary/softwaredesign.separationofconcerns","title":"Separation of Concerns","description":"Separation of Concerns is a design principle in software development and can be considered fundamental for creating","sidebar":"toolbox"},"Glossary/uml.actor":{"id":"Glossary/uml.actor","title":"Actor","description":"An Actor is an entity that interacts with a system.","sidebar":"toolbox"},"Glossary/uml.usecase":{"id":"Glossary/uml.usecase","title":"Use Case","description":"A Use Case represents a description of a functionality or requirement of a software system.","sidebar":"toolbox"},"index":{"id":"index","title":"Catalogue","description":"This is the more formal section of my site: A collection of methods and patterns I use in my everyday work as","sidebar":"toolbox"}}}')}}]);